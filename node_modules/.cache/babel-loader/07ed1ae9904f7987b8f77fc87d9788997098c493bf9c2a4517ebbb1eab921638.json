{"ast":null,"code":"var _ = require(\"underscore\");\nvar options = require(\"option\");\nvar results = require(\"./parsing-results\");\nvar errors = require(\"./errors\");\nvar lazyIterators = require(\"./lazy-iterators\");\nexports.token = function (tokenType, value) {\n  var matchValue = value !== undefined;\n  return function (input) {\n    var token = input.head();\n    if (token && token.name === tokenType && (!matchValue || token.value === value)) {\n      return results.success(token.value, input.tail(), token.source);\n    } else {\n      var expected = describeToken({\n        name: tokenType,\n        value: value\n      });\n      return describeTokenMismatch(input, expected);\n    }\n  };\n};\nexports.tokenOfType = function (tokenType) {\n  return exports.token(tokenType);\n};\nexports.firstOf = function (name, parsers) {\n  if (!_.isArray(parsers)) {\n    parsers = Array.prototype.slice.call(arguments, 1);\n  }\n  return function (input) {\n    return lazyIterators.fromArray(parsers).map(function (parser) {\n      return parser(input);\n    }).filter(function (result) {\n      return result.isSuccess() || result.isError();\n    }).first() || describeTokenMismatch(input, name);\n  };\n};\nexports.then = function (parser, func) {\n  return function (input) {\n    var result = parser(input);\n    if (!result.map) {\n      console.log(result);\n    }\n    return result.map(func);\n  };\n};\nexports.sequence = function () {\n  var parsers = Array.prototype.slice.call(arguments, 0);\n  var rule = function (input) {\n    var result = _.foldl(parsers, function (memo, parser) {\n      var result = memo.result;\n      var hasCut = memo.hasCut;\n      if (!result.isSuccess()) {\n        return {\n          result: result,\n          hasCut: hasCut\n        };\n      }\n      var subResult = parser(result.remaining());\n      if (subResult.isCut()) {\n        return {\n          result: result,\n          hasCut: true\n        };\n      } else if (subResult.isSuccess()) {\n        var values;\n        if (parser.isCaptured) {\n          values = result.value().withValue(parser, subResult.value());\n        } else {\n          values = result.value();\n        }\n        var remaining = subResult.remaining();\n        var source = input.to(remaining);\n        return {\n          result: results.success(values, remaining, source),\n          hasCut: hasCut\n        };\n      } else if (hasCut) {\n        return {\n          result: results.error(subResult.errors(), subResult.remaining()),\n          hasCut: hasCut\n        };\n      } else {\n        return {\n          result: subResult,\n          hasCut: hasCut\n        };\n      }\n    }, {\n      result: results.success(new SequenceValues(), input),\n      hasCut: false\n    }).result;\n    var source = input.to(result.remaining());\n    return result.map(function (values) {\n      return values.withValue(exports.sequence.source, source);\n    });\n  };\n  rule.head = function () {\n    var firstCapture = _.find(parsers, isCapturedRule);\n    return exports.then(rule, exports.sequence.extract(firstCapture));\n  };\n  rule.map = function (func) {\n    return exports.then(rule, function (result) {\n      return func.apply(this, result.toArray());\n    });\n  };\n  function isCapturedRule(subRule) {\n    return subRule.isCaptured;\n  }\n  return rule;\n};\nvar SequenceValues = function (values, valuesArray) {\n  this._values = values || {};\n  this._valuesArray = valuesArray || [];\n};\nSequenceValues.prototype.withValue = function (rule, value) {\n  if (rule.captureName && rule.captureName in this._values) {\n    throw new Error(\"Cannot add second value for capture \\\"\" + rule.captureName + \"\\\"\");\n  } else {\n    var newValues = _.clone(this._values);\n    newValues[rule.captureName] = value;\n    var newValuesArray = this._valuesArray.concat([value]);\n    return new SequenceValues(newValues, newValuesArray);\n  }\n};\nSequenceValues.prototype.get = function (rule) {\n  if (rule.captureName in this._values) {\n    return this._values[rule.captureName];\n  } else {\n    throw new Error(\"No value for capture \\\"\" + rule.captureName + \"\\\"\");\n  }\n};\nSequenceValues.prototype.toArray = function () {\n  return this._valuesArray;\n};\nexports.sequence.capture = function (rule, name) {\n  var captureRule = function () {\n    return rule.apply(this, arguments);\n  };\n  captureRule.captureName = name;\n  captureRule.isCaptured = true;\n  return captureRule;\n};\nexports.sequence.extract = function (rule) {\n  return function (result) {\n    return result.get(rule);\n  };\n};\nexports.sequence.applyValues = function (func) {\n  // TODO: check captureName doesn't conflict with source or other captures\n  var rules = Array.prototype.slice.call(arguments, 1);\n  return function (result) {\n    var values = rules.map(function (rule) {\n      return result.get(rule);\n    });\n    return func.apply(this, values);\n  };\n};\nexports.sequence.source = {\n  captureName: \"☃source☃\"\n};\nexports.sequence.cut = function () {\n  return function (input) {\n    return results.cut(input);\n  };\n};\nexports.optional = function (rule) {\n  return function (input) {\n    var result = rule(input);\n    if (result.isSuccess()) {\n      return result.map(options.some);\n    } else if (result.isFailure()) {\n      return results.success(options.none, input);\n    } else {\n      return result;\n    }\n  };\n};\nexports.zeroOrMoreWithSeparator = function (rule, separator) {\n  return repeatedWithSeparator(rule, separator, false);\n};\nexports.oneOrMoreWithSeparator = function (rule, separator) {\n  return repeatedWithSeparator(rule, separator, true);\n};\nvar zeroOrMore = exports.zeroOrMore = function (rule) {\n  return function (input) {\n    var values = [];\n    var result;\n    while ((result = rule(input)) && result.isSuccess()) {\n      input = result.remaining();\n      values.push(result.value());\n    }\n    if (result.isError()) {\n      return result;\n    } else {\n      return results.success(values, input);\n    }\n  };\n};\nexports.oneOrMore = function (rule) {\n  return exports.oneOrMoreWithSeparator(rule, noOpRule);\n};\nfunction noOpRule(input) {\n  return results.success(null, input);\n}\nvar repeatedWithSeparator = function (rule, separator, isOneOrMore) {\n  return function (input) {\n    var result = rule(input);\n    if (result.isSuccess()) {\n      var mainRule = exports.sequence.capture(rule, \"main\");\n      var remainingRule = zeroOrMore(exports.then(exports.sequence(separator, mainRule), exports.sequence.extract(mainRule)));\n      var remainingResult = remainingRule(result.remaining());\n      return results.success([result.value()].concat(remainingResult.value()), remainingResult.remaining());\n    } else if (isOneOrMore || result.isError()) {\n      return result;\n    } else {\n      return results.success([], input);\n    }\n  };\n};\nexports.leftAssociative = function (leftRule, rightRule, func) {\n  var rights;\n  if (func) {\n    rights = [{\n      func: func,\n      rule: rightRule\n    }];\n  } else {\n    rights = rightRule;\n  }\n  rights = rights.map(function (right) {\n    return exports.then(right.rule, function (rightValue) {\n      return function (leftValue, source) {\n        return right.func(leftValue, rightValue, source);\n      };\n    });\n  });\n  var repeatedRule = exports.firstOf.apply(null, [\"rules\"].concat(rights));\n  return function (input) {\n    var start = input;\n    var leftResult = leftRule(input);\n    if (!leftResult.isSuccess()) {\n      return leftResult;\n    }\n    var repeatedResult = repeatedRule(leftResult.remaining());\n    while (repeatedResult.isSuccess()) {\n      var remaining = repeatedResult.remaining();\n      var source = start.to(repeatedResult.remaining());\n      var right = repeatedResult.value();\n      leftResult = results.success(right(leftResult.value(), source), remaining, source);\n      repeatedResult = repeatedRule(leftResult.remaining());\n    }\n    if (repeatedResult.isError()) {\n      return repeatedResult;\n    }\n    return leftResult;\n  };\n};\nexports.leftAssociative.firstOf = function () {\n  return Array.prototype.slice.call(arguments, 0);\n};\nexports.nonConsuming = function (rule) {\n  return function (input) {\n    return rule(input).changeRemaining(input);\n  };\n};\nvar describeToken = function (token) {\n  if (token.value) {\n    return token.name + \" \\\"\" + token.value + \"\\\"\";\n  } else {\n    return token.name;\n  }\n};\nfunction describeTokenMismatch(input, expected) {\n  var error;\n  var token = input.head();\n  if (token) {\n    error = errors.error({\n      expected: expected,\n      actual: describeToken(token),\n      location: token.source\n    });\n  } else {\n    error = errors.error({\n      expected: expected,\n      actual: \"end of tokens\"\n    });\n  }\n  return results.failure([error], input);\n}","map":{"version":3,"names":["_","require","options","results","errors","lazyIterators","exports","token","tokenType","value","matchValue","undefined","input","head","name","success","tail","source","expected","describeToken","describeTokenMismatch","tokenOfType","firstOf","parsers","isArray","Array","prototype","slice","call","arguments","fromArray","map","parser","filter","result","isSuccess","isError","first","then","func","console","log","sequence","rule","foldl","memo","hasCut","subResult","remaining","isCut","values","isCaptured","withValue","to","error","SequenceValues","firstCapture","find","isCapturedRule","extract","apply","toArray","subRule","valuesArray","_values","_valuesArray","captureName","Error","newValues","clone","newValuesArray","concat","get","capture","captureRule","applyValues","rules","cut","optional","some","isFailure","none","zeroOrMoreWithSeparator","separator","repeatedWithSeparator","oneOrMoreWithSeparator","zeroOrMore","push","oneOrMore","noOpRule","isOneOrMore","mainRule","remainingRule","remainingResult","leftAssociative","leftRule","rightRule","rights","right","rightValue","leftValue","repeatedRule","start","leftResult","repeatedResult","nonConsuming","changeRemaining","actual","location","failure"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/lop/lib/rules.js"],"sourcesContent":["var _ = require(\"underscore\");\nvar options = require(\"option\");\nvar results = require(\"./parsing-results\");\nvar errors = require(\"./errors\");\nvar lazyIterators = require(\"./lazy-iterators\");\n\nexports.token = function(tokenType, value) {\n    var matchValue = value !== undefined;\n    return function(input) {\n        var token = input.head();\n        if (token && token.name === tokenType && (!matchValue || token.value === value)) {\n            return results.success(token.value, input.tail(), token.source);\n        } else {\n            var expected = describeToken({name: tokenType, value: value});\n            return describeTokenMismatch(input, expected);\n        }\n    };\n};\n\nexports.tokenOfType = function(tokenType) {\n    return exports.token(tokenType);\n};\n\nexports.firstOf = function(name, parsers) {\n    if (!_.isArray(parsers)) {\n        parsers = Array.prototype.slice.call(arguments, 1);\n    }\n    return function(input) {\n        return lazyIterators\n            .fromArray(parsers)\n            .map(function(parser) {\n                return parser(input);\n            })\n            .filter(function(result) {\n                return result.isSuccess() || result.isError();\n            })\n            .first() || describeTokenMismatch(input, name);\n    };\n};\n\nexports.then = function(parser, func) {\n    return function(input) {\n        var result = parser(input);\n        if (!result.map) {\n            console.log(result);\n        }\n        return result.map(func);\n    };\n};\n\nexports.sequence = function() {\n    var parsers = Array.prototype.slice.call(arguments, 0);\n    var rule = function(input) {\n        var result = _.foldl(parsers, function(memo, parser) {\n            var result = memo.result;\n            var hasCut = memo.hasCut;\n            if (!result.isSuccess()) {\n                return {result: result, hasCut: hasCut};\n            }\n            var subResult = parser(result.remaining());\n            if (subResult.isCut()) {\n                return {result: result, hasCut: true};\n            } else if (subResult.isSuccess()) {\n                var values;\n                if (parser.isCaptured) {\n                    values = result.value().withValue(parser, subResult.value());\n                } else {\n                    values = result.value();\n                }\n                var remaining = subResult.remaining();\n                var source = input.to(remaining);\n                return {\n                    result: results.success(values, remaining, source),\n                    hasCut: hasCut\n                };\n            } else if (hasCut) {\n                return {result: results.error(subResult.errors(), subResult.remaining()), hasCut: hasCut};\n            } else {\n                return {result: subResult, hasCut: hasCut};\n            }\n        }, {result: results.success(new SequenceValues(), input), hasCut: false}).result;\n        var source = input.to(result.remaining());\n        return result.map(function(values) {\n            return values.withValue(exports.sequence.source, source);\n        });\n    };\n    rule.head = function() {\n        var firstCapture = _.find(parsers, isCapturedRule);\n        return exports.then(\n            rule,\n            exports.sequence.extract(firstCapture)\n        );\n    };\n    rule.map = function(func) {\n        return exports.then(\n            rule,\n            function(result) {\n                return func.apply(this, result.toArray());\n            }\n        );\n    };\n    \n    function isCapturedRule(subRule) {\n        return subRule.isCaptured;\n    }\n    \n    return rule;\n};\n\nvar SequenceValues = function(values, valuesArray) {\n    this._values = values || {};\n    this._valuesArray = valuesArray || [];\n};\n\nSequenceValues.prototype.withValue = function(rule, value) {\n    if (rule.captureName && rule.captureName in this._values) {\n        throw new Error(\"Cannot add second value for capture \\\"\" + rule.captureName + \"\\\"\");\n    } else {\n        var newValues = _.clone(this._values);\n        newValues[rule.captureName] = value;\n        var newValuesArray = this._valuesArray.concat([value]);\n        return new SequenceValues(newValues, newValuesArray);\n    }\n};\n\nSequenceValues.prototype.get = function(rule) {\n    if (rule.captureName in this._values) {\n        return this._values[rule.captureName];\n    } else {\n        throw new Error(\"No value for capture \\\"\" + rule.captureName + \"\\\"\");\n    }\n};\n\nSequenceValues.prototype.toArray = function() {\n    return this._valuesArray;\n};\n\nexports.sequence.capture = function(rule, name) {\n    var captureRule = function() {\n        return rule.apply(this, arguments);\n    };\n    captureRule.captureName = name;\n    captureRule.isCaptured = true;\n    return captureRule;\n};\n\nexports.sequence.extract = function(rule) {\n    return function(result) {\n        return result.get(rule);\n    };\n};\n\nexports.sequence.applyValues = function(func) {\n    // TODO: check captureName doesn't conflict with source or other captures\n    var rules = Array.prototype.slice.call(arguments, 1);\n    return function(result) {\n        var values = rules.map(function(rule) {\n            return result.get(rule);\n        });\n        return func.apply(this, values);\n    };\n};\n\nexports.sequence.source = {\n    captureName: \"☃source☃\"\n};\n\nexports.sequence.cut = function() {\n    return function(input) {\n        return results.cut(input);\n    };\n};\n\nexports.optional = function(rule) {\n    return function(input) {\n        var result = rule(input);\n        if (result.isSuccess()) {\n            return result.map(options.some);\n        } else if (result.isFailure()) {\n            return results.success(options.none, input);\n        } else {\n            return result;\n        }\n    };\n};\n\nexports.zeroOrMoreWithSeparator = function(rule, separator) {\n    return repeatedWithSeparator(rule, separator, false);\n};\n\nexports.oneOrMoreWithSeparator = function(rule, separator) {\n    return repeatedWithSeparator(rule, separator, true);\n};\n\nvar zeroOrMore = exports.zeroOrMore = function(rule) {\n    return function(input) {\n        var values = [];\n        var result;\n        while ((result = rule(input)) && result.isSuccess()) {\n            input = result.remaining();\n            values.push(result.value());\n        }\n        if (result.isError()) {\n            return result;\n        } else {\n            return results.success(values, input);\n        }\n    };\n};\n\nexports.oneOrMore = function(rule) {\n    return exports.oneOrMoreWithSeparator(rule, noOpRule);\n};\n\nfunction noOpRule(input) {\n    return results.success(null, input);\n}\n\nvar repeatedWithSeparator = function(rule, separator, isOneOrMore) {\n    return function(input) {\n        var result = rule(input);\n        if (result.isSuccess()) {\n            var mainRule = exports.sequence.capture(rule, \"main\");\n            var remainingRule = zeroOrMore(exports.then(\n                exports.sequence(separator, mainRule),\n                exports.sequence.extract(mainRule)\n            ));\n            var remainingResult = remainingRule(result.remaining());\n            return results.success([result.value()].concat(remainingResult.value()), remainingResult.remaining());\n        } else if (isOneOrMore || result.isError()) {\n            return result;\n        } else {\n            return results.success([], input);\n        }\n    };\n};\n\nexports.leftAssociative = function(leftRule, rightRule, func) {\n    var rights;\n    if (func) {\n        rights = [{func: func, rule: rightRule}];\n    } else {\n        rights = rightRule;\n    }\n    rights = rights.map(function(right) {\n        return exports.then(right.rule, function(rightValue) {\n            return function(leftValue, source) {\n                return right.func(leftValue, rightValue, source);\n            };\n        });\n    });\n    var repeatedRule = exports.firstOf.apply(null, [\"rules\"].concat(rights));\n    \n    return function(input) {\n        var start = input;\n        var leftResult = leftRule(input);\n        if (!leftResult.isSuccess()) {\n            return leftResult;\n        }\n        var repeatedResult = repeatedRule(leftResult.remaining());\n        while (repeatedResult.isSuccess()) {\n            var remaining = repeatedResult.remaining();\n            var source = start.to(repeatedResult.remaining());\n            var right = repeatedResult.value();\n            leftResult = results.success(\n                right(leftResult.value(), source),\n                remaining,\n                source\n            );\n            repeatedResult = repeatedRule(leftResult.remaining());\n        }\n        if (repeatedResult.isError()) {\n            return repeatedResult;\n        }\n        return leftResult;\n    };\n};\n\nexports.leftAssociative.firstOf = function() {\n    return Array.prototype.slice.call(arguments, 0);\n};\n\nexports.nonConsuming = function(rule) {\n    return function(input) {\n        return rule(input).changeRemaining(input);\n    };\n};\n\nvar describeToken = function(token) {\n    if (token.value) {\n        return token.name + \" \\\"\" + token.value + \"\\\"\";\n    } else {\n        return token.name;\n    }\n};\n\nfunction describeTokenMismatch(input, expected) {\n    var error;\n    var token = input.head();\n    if (token) {\n        error = errors.error({\n            expected: expected,\n            actual: describeToken(token),\n            location: token.source\n        });\n    } else {\n        error = errors.error({\n            expected: expected,\n            actual: \"end of tokens\"\n        });\n    }\n    return results.failure([error], input);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}