{"ast":null,"code":"var _ = require(\"underscore\");\nvar promises = require(\"../promises\");\nvar xml = require(\"../xml\");\nexports.writeStyleMap = writeStyleMap;\nexports.readStyleMap = readStyleMap;\nvar schema = \"http://schemas.zwobble.org/mammoth/style-map\";\nvar styleMapPath = \"mammoth/style-map\";\nvar styleMapAbsolutePath = \"/\" + styleMapPath;\nfunction writeStyleMap(docxFile, styleMap) {\n  docxFile.write(styleMapPath, styleMap);\n  return updateRelationships(docxFile).then(function () {\n    return updateContentTypes(docxFile);\n  });\n}\nfunction updateRelationships(docxFile) {\n  var path = \"word/_rels/document.xml.rels\";\n  var relationshipsUri = \"http://schemas.openxmlformats.org/package/2006/relationships\";\n  var relationshipElementName = \"{\" + relationshipsUri + \"}Relationship\";\n  return docxFile.read(path, \"utf8\").then(xml.readString).then(function (relationshipsContainer) {\n    var relationships = relationshipsContainer.children;\n    addOrUpdateElement(relationships, relationshipElementName, \"Id\", {\n      \"Id\": \"rMammothStyleMap\",\n      \"Type\": schema,\n      \"Target\": styleMapAbsolutePath\n    });\n    var namespaces = {\n      \"\": relationshipsUri\n    };\n    return docxFile.write(path, xml.writeString(relationshipsContainer, namespaces));\n  });\n}\nfunction updateContentTypes(docxFile) {\n  var path = \"[Content_Types].xml\";\n  var contentTypesUri = \"http://schemas.openxmlformats.org/package/2006/content-types\";\n  var overrideName = \"{\" + contentTypesUri + \"}Override\";\n  return docxFile.read(path, \"utf8\").then(xml.readString).then(function (typesElement) {\n    var children = typesElement.children;\n    addOrUpdateElement(children, overrideName, \"PartName\", {\n      \"PartName\": styleMapAbsolutePath,\n      \"ContentType\": \"text/prs.mammoth.style-map\"\n    });\n    var namespaces = {\n      \"\": contentTypesUri\n    };\n    return docxFile.write(path, xml.writeString(typesElement, namespaces));\n  });\n}\nfunction addOrUpdateElement(elements, name, identifyingAttribute, attributes) {\n  var existingElement = _.find(elements, function (element) {\n    return element.name === name && element.attributes[identifyingAttribute] === attributes[identifyingAttribute];\n  });\n  if (existingElement) {\n    existingElement.attributes = attributes;\n  } else {\n    elements.push(xml.element(name, attributes));\n  }\n}\nfunction readStyleMap(docxFile) {\n  if (docxFile.exists(styleMapPath)) {\n    return docxFile.read(styleMapPath, \"utf8\");\n  } else {\n    return promises.resolve(null);\n  }\n}","map":{"version":3,"names":["_","require","promises","xml","exports","writeStyleMap","readStyleMap","schema","styleMapPath","styleMapAbsolutePath","docxFile","styleMap","write","updateRelationships","then","updateContentTypes","path","relationshipsUri","relationshipElementName","read","readString","relationshipsContainer","relationships","children","addOrUpdateElement","namespaces","writeString","contentTypesUri","overrideName","typesElement","elements","name","identifyingAttribute","attributes","existingElement","find","element","push","exists","resolve"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/mammoth/lib/docx/style-map.js"],"sourcesContent":["var _ = require(\"underscore\");\n\nvar promises = require(\"../promises\");\nvar xml = require(\"../xml\");\n\nexports.writeStyleMap = writeStyleMap;\nexports.readStyleMap = readStyleMap;\n\n\nvar schema = \"http://schemas.zwobble.org/mammoth/style-map\";\nvar styleMapPath = \"mammoth/style-map\";\nvar styleMapAbsolutePath = \"/\" + styleMapPath;\n\nfunction writeStyleMap(docxFile, styleMap) {\n    docxFile.write(styleMapPath, styleMap);\n    return updateRelationships(docxFile).then(function() {\n        return updateContentTypes(docxFile);\n    });\n}\n\nfunction updateRelationships(docxFile) {\n    var path = \"word/_rels/document.xml.rels\";\n    var relationshipsUri = \"http://schemas.openxmlformats.org/package/2006/relationships\";\n    var relationshipElementName = \"{\" + relationshipsUri + \"}Relationship\";\n    return docxFile.read(path, \"utf8\")\n        .then(xml.readString)\n        .then(function(relationshipsContainer) {\n            var relationships = relationshipsContainer.children;\n            addOrUpdateElement(relationships, relationshipElementName, \"Id\", {\n                \"Id\": \"rMammothStyleMap\",\n                \"Type\": schema,\n                \"Target\": styleMapAbsolutePath\n            });\n            \n            var namespaces = {\"\": relationshipsUri};\n            return docxFile.write(path, xml.writeString(relationshipsContainer, namespaces));\n        });\n}\n\nfunction updateContentTypes(docxFile) {\n    var path = \"[Content_Types].xml\";\n    var contentTypesUri = \"http://schemas.openxmlformats.org/package/2006/content-types\";\n    var overrideName = \"{\" + contentTypesUri + \"}Override\";\n    return docxFile.read(path, \"utf8\")\n        .then(xml.readString)\n        .then(function(typesElement) {\n            var children = typesElement.children;\n            addOrUpdateElement(children, overrideName, \"PartName\", {\n                \"PartName\": styleMapAbsolutePath,\n                \"ContentType\": \"text/prs.mammoth.style-map\"\n            });\n            var namespaces = {\"\": contentTypesUri};\n            return docxFile.write(path, xml.writeString(typesElement, namespaces));\n        });\n}\n\nfunction addOrUpdateElement(elements, name, identifyingAttribute, attributes) {\n    var existingElement = _.find(elements, function(element) {\n        return element.name === name &&\n            element.attributes[identifyingAttribute] === attributes[identifyingAttribute];\n    });\n    if (existingElement) {\n        existingElement.attributes = attributes;\n    } else {\n        elements.push(xml.element(name, attributes));\n    }\n}\n\nfunction readStyleMap(docxFile) {\n    if (docxFile.exists(styleMapPath)) {\n        return docxFile.read(styleMapPath, \"utf8\");\n    } else {\n        return promises.resolve(null);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}