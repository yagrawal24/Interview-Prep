{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLStringifier,\n    bind = function (fn, me) {\n      return function () {\n        return fn.apply(me, arguments);\n      };\n    },\n    hasProp = {}.hasOwnProperty;\n  module.exports = XMLStringifier = function () {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n    XMLStringifier.prototype.eleName = function (val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n    XMLStringifier.prototype.eleText = function (val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n    XMLStringifier.prototype.cdata = function (val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n    XMLStringifier.prototype.comment = function (val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n    XMLStringifier.prototype.raw = function (val) {\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.attName = function (val) {\n      return val = '' + val || '';\n    };\n    XMLStringifier.prototype.attValue = function (val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n    XMLStringifier.prototype.insTarget = function (val) {\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.insValue = function (val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n    XMLStringifier.prototype.xmlVersion = function (val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n    XMLStringifier.prototype.xmlEncoding = function (val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n    XMLStringifier.prototype.xmlStandalone = function (val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n    XMLStringifier.prototype.dtdPubID = function (val) {\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.dtdSysID = function (val) {\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.dtdElementValue = function (val) {\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.dtdAttType = function (val) {\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.dtdAttDefault = function (val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n    XMLStringifier.prototype.dtdEntityValue = function (val) {\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.dtdNData = function (val) {\n      return '' + val || '';\n    };\n    XMLStringifier.prototype.convertAttKey = '@';\n    XMLStringifier.prototype.convertPIKey = '?';\n    XMLStringifier.prototype.convertTextKey = '#text';\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n    XMLStringifier.prototype.convertRawKey = '#raw';\n    XMLStringifier.prototype.assertLegalChar = function (str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n    XMLStringifier.prototype.elEscape = function (str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n    XMLStringifier.prototype.attEscape = function (str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n    return XMLStringifier;\n  }();\n}).call(this);","map":{"version":3,"names":["XMLStringifier","bind","fn","me","apply","arguments","hasProp","hasOwnProperty","module","exports","options","assertLegalChar","key","ref","value","noDoubleEncoding","stringify","call","prototype","eleName","val","eleText","elEscape","cdata","replace","comment","match","Error","raw","attName","attValue","attEscape","insTarget","insValue","xmlVersion","xmlEncoding","xmlStandalone","dtdPubID","dtdSysID","dtdElementValue","dtdAttType","dtdAttDefault","dtdEntityValue","dtdNData","convertAttKey","convertPIKey","convertTextKey","convertCDataKey","convertCommentKey","convertRawKey","str","res","index","ampregex"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/xmlbuilder/lib/XMLStringifier.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.noDoubleEncoding = options.noDoubleEncoding;\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.eleName = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.eleText = function(val) {\n      val = '' + val || '';\n      return this.assertLegalChar(this.elEscape(val));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attName = function(val) {\n      return val = '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      val = '' + val || '';\n      return this.attEscape(val);\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (val != null) {\n        return '' + val || '';\n      } else {\n        return val;\n      }\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var res;\n      res = str.match(/[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/);\n      if (res) {\n        throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.elEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      ampregex = this.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}