{"ast":null,"code":"var _jsxFileName = \"/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/src/ChatBox.js\",\n  _s = $RefreshSig$();\n// src/components/ChatBox.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const handleSendMessage = async () => {\n    try {\n      // Send user message to the OpenAI API\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        prompt: newMessage,\n        max_tokens: 50,\n        model: 'text-davinci-003'\n      }, {\n        headers: {\n          'Authorization': 'Bearer ${api_key.env.OPENAI_API_KEY}',\n          'Content-Type': 'application/json'\n        }\n      });\n\n      // Extract the AI response from the API response\n      const responseText = response.data.choices[0].text;\n      console.log(responseText);\n\n      // Update the chat interface\n      setMessages([...messages, {\n        text: newMessage,\n        user: true\n      }, {\n        text: responseText,\n        user: false\n      }]);\n      setNewMessage('');\n    } catch (error) {\n      console.error('Error sending message to OpenAI API:', error.response.status, error.response.data);\n      // Handle the error as needed (e.g., show an error message to the user)\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: message.user ? 'user-message' : 'ai-message',\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Type your message...\",\n      value: newMessage,\n      onChange: e => setNewMessage(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"chat-button\",\n      onClick: handleSendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"t/bJtz8T5owTIUv5OHFKDlj9m7s=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","newMessage","setNewMessage","handleSendMessage","response","post","prompt","max_tokens","model","headers","responseText","data","choices","text","console","log","user","error","status","children","className","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/src/ChatBox.js"],"sourcesContent":["// src/components/ChatBox.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\n\nconst ChatBox = () => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n\n  const handleSendMessage = async () => {\n    try {\n      // Send user message to the OpenAI API\n      const response = await axios.post('https://api.openai.com/v1/chat/completions', {\n        prompt: newMessage,\n        max_tokens: 50,\n        model: 'text-davinci-003'\n      }, {\n        headers: {\n          'Authorization': 'Bearer ${api_key.env.OPENAI_API_KEY}',\n          'Content-Type': 'application/json',\n        },\n      });\n  \n      // Extract the AI response from the API response\n      const responseText = response.data.choices[0].text;\n      console.log(responseText);\n  \n      // Update the chat interface\n      setMessages([...messages, { text: newMessage, user: true }, { text: responseText, user: false }]);\n      setNewMessage('');\n    } catch (error) {\n        console.error('Error sending message to OpenAI API:', error.response.status, error.response.data);\n      // Handle the error as needed (e.g., show an error message to the user)\n    }\n  };\n\n  return (\n    <div>\n      <div className=\"chat-container\">\n        {messages.map((message, index) => (\n          <div key={index} className={message.user ? 'user-message' : 'ai-message'}>\n            {message.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        placeholder=\"Type your message...\"\n        value={newMessage}\n        onChange={(e) => setNewMessage(e.target.value)}\n      />\n      <button className=\"chat-button\" onClick={handleSendMessage}>Send</button>\n    </div>\n  );\n};\n\nexport default ChatBox;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMU,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,IAAI,CAAC,4CAA4C,EAAE;QAC9EC,MAAM,EAAEL,UAAU;QAClBM,UAAU,EAAE,EAAE;QACdC,KAAK,EAAE;MACT,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,eAAe,EAAE,sCAAsC;UACvD,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;;MAEF;MACA,MAAMC,YAAY,GAAGN,QAAQ,CAACO,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;MAClDC,OAAO,CAACC,GAAG,CAACL,YAAY,CAAC;;MAEzB;MACAV,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAE;QAAEc,IAAI,EAAEZ,UAAU;QAAEe,IAAI,EAAE;MAAK,CAAC,EAAE;QAAEH,IAAI,EAAEH,YAAY;QAAEM,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC;MACjGd,aAAa,CAAC,EAAE,CAAC;IACnB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAACb,QAAQ,CAACc,MAAM,EAAED,KAAK,CAACb,QAAQ,CAACO,IAAI,CAAC;MACnG;IACF;EACF,CAAC;;EAED,oBACEf,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC5BpB,QAAQ,CAACsB,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3B3B,OAAA;QAAiBwB,SAAS,EAAEE,OAAO,CAACN,IAAI,GAAG,cAAc,GAAG,YAAa;QAAAG,QAAA,EACtEG,OAAO,CAACT;MAAI,GADLU,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN/B,OAAA;MACEgC,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAsB;MAClCC,KAAK,EAAE7B,UAAW;MAClB8B,QAAQ,EAAGC,CAAC,IAAK9B,aAAa,CAAC8B,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,eACF/B,OAAA;MAAQwB,SAAS,EAAC,aAAa;MAACc,OAAO,EAAE/B,iBAAkB;MAAAgB,QAAA,EAAC;IAAI;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAjDID,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAmDb,eAAeA,OAAO;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}