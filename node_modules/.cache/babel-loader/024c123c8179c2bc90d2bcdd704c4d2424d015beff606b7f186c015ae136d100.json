{"ast":null,"code":"var _jsxFileName = \"/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/src/CategoryAndResumePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Updated import\nimport ChatBox from './ChatBox';\nimport ResumeUpload from './components/ResumeUpload.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryAndResumePage = () => {\n  _s();\n  // Keep Track of interview state\n  //const [interviewInProgress, setInterviewInProgress] = useState(true);\n  // Entire Interview Conversation for evaluation\n  const [messages, setMessages] = useState([]);\n  // GPT output?\n  const [transcript, setTranscript] = useState('');\n  // User Input for GPT?\n  const [userSpeech, setUserSpeech] = useState('');\n  const [isResumeUploaded, setIsResumeUploaded] = useState(false);\n  const navigate = useNavigate(); // Updated to useNavigate\n\n  const handleUploadSuccess = () => {\n    setIsResumeUploaded(true);\n  };\n  useEffect(() => {\n    // Check if resume is uploaded and a category is selected\n    if (isResumeUploaded /* and category is selected, if you manage category state here */) {\n      navigate('/interview'); // Updated to use navigate\n    }\n  }, [isResumeUploaded, navigate]);\n  console.log(\"Category and Resume page is loading\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ResumeUpload, {\n      setUserSpeech: setUserSpeech,\n      onUploadSuccess: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatBox, {\n      setTranscript: setTranscript,\n      userSpeech: userSpeech,\n      messages: messages,\n      setMessages: setMessages,\n      isResumeUploaded: isResumeUploaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(CategoryAndResumePage, \"3PGIWY1xr6H2b6zP974LnOuCEL8=\", false, function () {\n  return [useNavigate];\n});\n_c = CategoryAndResumePage;\nexport default CategoryAndResumePage;\nvar _c;\n$RefreshReg$(_c, \"CategoryAndResumePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ChatBox","ResumeUpload","jsxDEV","_jsxDEV","CategoryAndResumePage","_s","messages","setMessages","transcript","setTranscript","userSpeech","setUserSpeech","isResumeUploaded","setIsResumeUploaded","navigate","handleUploadSuccess","console","log","children","onUploadSuccess","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/src/CategoryAndResumePage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Updated import\nimport ChatBox from './ChatBox';\nimport ResumeUpload from './components/ResumeUpload.jsx';\n\nconst CategoryAndResumePage = () => {\n  // Keep Track of interview state\n  //const [interviewInProgress, setInterviewInProgress] = useState(true);\n  // Entire Interview Conversation for evaluation\n  const [messages, setMessages] = useState([]);\n  // GPT output?\n  const [transcript, setTranscript] = useState('');\n  // User Input for GPT?\n  const [userSpeech, setUserSpeech] = useState('');\n  const [isResumeUploaded, setIsResumeUploaded] = useState(false);\n  const navigate = useNavigate(); // Updated to useNavigate\n\n  const handleUploadSuccess = () => {\n    setIsResumeUploaded(true);\n  };\n  \n  useEffect(() => {\n    // Check if resume is uploaded and a category is selected\n    if (isResumeUploaded /* and category is selected, if you manage category state here */) {\n      navigate('/interview'); // Updated to use navigate\n    }\n  }, [isResumeUploaded, navigate]);\n\n  console.log(\"Category and Resume page is loading\");\n\n  return (\n    <div>\n      <ResumeUpload setUserSpeech={setUserSpeech} onUploadSuccess={handleUploadSuccess} />\n      <ChatBox setTranscript={setTranscript} userSpeech={userSpeech} messages={messages} setMessages={setMessages} isResumeUploaded={isResumeUploaded} />\n    </div>\n  );\n};\n\nexport default CategoryAndResumePage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,YAAY,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,qBAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC;EACA;EACA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C;EACA,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACe,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAMiB,QAAQ,GAAGf,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMgB,mBAAmB,GAAGA,CAAA,KAAM;IAChCF,mBAAmB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAEDf,SAAS,CAAC,MAAM;IACd;IACA,IAAIc,gBAAgB,CAAC,mEAAmE;MACtFE,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC,EAAE,CAACF,gBAAgB,EAAEE,QAAQ,CAAC,CAAC;EAEhCE,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;EAElD,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACF,YAAY;MAACU,aAAa,EAAEA,aAAc;MAACQ,eAAe,EAAEJ;IAAoB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpFpB,OAAA,CAACH,OAAO;MAACS,aAAa,EAAEA,aAAc;MAACC,UAAU,EAAEA,UAAW;MAACJ,QAAQ,EAAEA,QAAS;MAACC,WAAW,EAAEA,WAAY;MAACK,gBAAgB,EAAEA;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChJ,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/BID,qBAAqB;EAAA,QAURL,WAAW;AAAA;AAAAyB,EAAA,GAVxBpB,qBAAqB;AAiC3B,eAAeA,qBAAqB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}