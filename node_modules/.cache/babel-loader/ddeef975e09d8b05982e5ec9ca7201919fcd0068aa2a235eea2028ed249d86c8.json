{"ast":null,"code":"var _jsxFileName = \"/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/src/components/VoiceToText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VoiceToText = () => {\n  _s();\n  const [transcript, setTranscript] = useState('');\n  const [isListening, setIsListening] = useState(false);\n  const [audioFile, setAudioFile] = useState(null);\n  const handleStart = () => {\n    if (window.SpeechRecognition || window.webkitSpeechRecognition) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.onstart = () => setIsListening(true);\n      recognition.onresult = event => {\n        setTranscript(event.results[0][0].transcript);\n        setIsListening(false);\n      };\n      recognition.onend = () => setIsListening(false);\n      recognition.start();\n    } else {\n      alert(\"Your browser does not support the Web Speech API. Please try a different browser.\");\n    }\n  };\n  const handleGenerateAudio = async () => {\n    sendTranscriptToBackend(transcript);\n  };\n  const sendTranscriptToBackend = async text => {\n    const backendUrl = 'http://127.0.0.1:5000/generate_audio';\n    try {\n      const response = await fetch(backendUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          text: text\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status} ${response.statusText}`);\n      }\n      const responseData = await response.json();\n      setAudioFile(responseData.audio_file);\n    } catch (error) {\n      console.error('Error sending transcript to backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"voice-to-text-button\",\n      onClick: handleStart,\n      children: isListening ? 'Listening...' : 'Start Listening'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: transcript,\n      readOnly: true,\n      placeholder: \"Transcription will appear here...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), transcript && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateAudio,\n      children: \"Generate Audio\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this), audioFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Generated Audio File:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        src: `http://127.0.0.1:5000/simple_test`,\n        children: \"Your browser does not support the audio tag.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n};\n_s(VoiceToText, \"GZjfCjC6QlKfdewuzhJdQjp3NZA=\");\n_c = VoiceToText;\nexport default VoiceToText;\nvar _c;\n$RefreshReg$(_c, \"VoiceToText\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VoiceToText","_s","transcript","setTranscript","isListening","setIsListening","audioFile","setAudioFile","handleStart","window","SpeechRecognition","webkitSpeechRecognition","recognition","onstart","onresult","event","results","onend","start","alert","handleGenerateAudio","sendTranscriptToBackend","text","backendUrl","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","statusText","responseData","json","audio_file","error","console","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","value","readOnly","placeholder","controls","src","_c","$RefreshReg$"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/src/components/VoiceToText.jsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst VoiceToText = () => {\n    const [transcript, setTranscript] = useState('');\n    const [isListening, setIsListening] = useState(false);\n    const [audioFile, setAudioFile] = useState(null);\n\n    const handleStart = () => {\n        if (window.SpeechRecognition || window.webkitSpeechRecognition) {\n            const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n            const recognition = new SpeechRecognition();\n            \n            recognition.onstart = () => setIsListening(true);\n            recognition.onresult = (event) => {\n                setTranscript(event.results[0][0].transcript);\n                setIsListening(false);\n            };\n            recognition.onend = () => setIsListening(false);\n\n            recognition.start();\n        } else {\n            alert(\"Your browser does not support the Web Speech API. Please try a different browser.\");\n        }\n    };\n\n    const handleGenerateAudio = async () => {\n        sendTranscriptToBackend(transcript);\n    };\n\n    const sendTranscriptToBackend = async (text) => {\n        const backendUrl = 'http://127.0.0.1:5000/generate_audio';\n\n        try {\n            const response = await fetch(backendUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ text: text })\n            });\n\n            if (!response.ok) {\n                throw new Error(`HTTP error! status: ${response.status} ${response.statusText}`);\n            }\n\n            const responseData = await response.json();\n            setAudioFile(responseData.audio_file);\n\n        } catch (error) {\n            console.error('Error sending transcript to backend:', error);\n        }\n    };\n\n    return (\n        <div>\n            <button className=\"voice-to-text-button\" onClick={handleStart}>\n                {isListening ? 'Listening...' : 'Start Listening'}\n            </button>\n            <textarea value={transcript} readOnly placeholder=\"Transcription will appear here...\"></textarea>\n            \n            {transcript && (\n                <button onClick={handleGenerateAudio}>\n                    Generate Audio\n                </button>\n            )}\n\n            {audioFile && (\n                <div>\n                    <h3>Your Generated Audio File:</h3>\n                        <audio controls src={`http://127.0.0.1:5000/simple_test`}>\n                            Your browser does not support the audio tag.\n                        </audio>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default VoiceToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}