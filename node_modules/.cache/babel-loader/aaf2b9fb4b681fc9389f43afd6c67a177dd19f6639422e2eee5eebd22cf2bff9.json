{"ast":null,"code":"var _ = require(\"underscore\");\nvar docxReader = require(\"./docx/docx-reader\");\nvar docxStyleMap = require(\"./docx/style-map\");\nvar DocumentConverter = require(\"./document-to-html\").DocumentConverter;\nvar convertElementToRawText = require(\"./raw-text\").convertElementToRawText;\nvar readStyle = require(\"./style-reader\").readStyle;\nvar readOptions = require(\"./options-reader\").readOptions;\nvar unzip = require(\"./unzip\");\nvar Result = require(\"./results\").Result;\nexports.convertToHtml = convertToHtml;\nexports.convertToMarkdown = convertToMarkdown;\nexports.convert = convert;\nexports.extractRawText = extractRawText;\nexports.images = require(\"./images\");\nexports.transforms = require(\"./transforms\");\nexports.underline = require(\"./underline\");\nexports.embedStyleMap = embedStyleMap;\nexports.readEmbeddedStyleMap = readEmbeddedStyleMap;\nfunction convertToHtml(input, options) {\n  return convert(input, options);\n}\nfunction convertToMarkdown(input, options) {\n  var markdownOptions = Object.create(options || {});\n  markdownOptions.outputFormat = \"markdown\";\n  return convert(input, markdownOptions);\n}\nfunction convert(input, options) {\n  options = readOptions(options);\n  return unzip.openZip(input).tap(function (docxFile) {\n    return docxStyleMap.readStyleMap(docxFile).then(function (styleMap) {\n      options.embeddedStyleMap = styleMap;\n    });\n  }).then(function (docxFile) {\n    return docxReader.read(docxFile, input).then(function (documentResult) {\n      return documentResult.map(options.transformDocument);\n    }).then(function (documentResult) {\n      return convertDocumentToHtml(documentResult, options);\n    });\n  });\n}\nfunction readEmbeddedStyleMap(input) {\n  return unzip.openZip(input).then(docxStyleMap.readStyleMap);\n}\nfunction convertDocumentToHtml(documentResult, options) {\n  var styleMapResult = parseStyleMap(options.readStyleMap());\n  var parsedOptions = _.extend({}, options, {\n    styleMap: styleMapResult.value\n  });\n  var documentConverter = new DocumentConverter(parsedOptions);\n  return documentResult.flatMapThen(function (document) {\n    return styleMapResult.flatMapThen(function (styleMap) {\n      return documentConverter.convertToHtml(document);\n    });\n  });\n}\nfunction parseStyleMap(styleMap) {\n  return Result.combine((styleMap || []).map(readStyle)).map(function (styleMap) {\n    return styleMap.filter(function (styleMapping) {\n      return !!styleMapping;\n    });\n  });\n}\nfunction extractRawText(input) {\n  return unzip.openZip(input).then(docxReader.read).then(function (documentResult) {\n    return documentResult.map(convertElementToRawText);\n  });\n}\nfunction embedStyleMap(input, styleMap) {\n  return unzip.openZip(input).tap(function (docxFile) {\n    return docxStyleMap.writeStyleMap(docxFile, styleMap);\n  }).then(function (docxFile) {\n    return docxFile.toArrayBuffer();\n  }).then(function (arrayBuffer) {\n    return {\n      toArrayBuffer: function () {\n        return arrayBuffer;\n      },\n      toBuffer: function () {\n        return Buffer.from(arrayBuffer);\n      }\n    };\n  });\n}\nexports.styleMapping = function () {\n  throw new Error('Use a raw string instead of mammoth.styleMapping e.g. \"p[style-name=\\'Title\\'] => h1\" instead of mammoth.styleMapping(\"p[style-name=\\'Title\\'] => h1\")');\n};","map":{"version":3,"names":["_","require","docxReader","docxStyleMap","DocumentConverter","convertElementToRawText","readStyle","readOptions","unzip","Result","exports","convertToHtml","convertToMarkdown","convert","extractRawText","images","transforms","underline","embedStyleMap","readEmbeddedStyleMap","input","options","markdownOptions","Object","create","outputFormat","openZip","tap","docxFile","readStyleMap","then","styleMap","embeddedStyleMap","read","documentResult","map","transformDocument","convertDocumentToHtml","styleMapResult","parseStyleMap","parsedOptions","extend","value","documentConverter","flatMapThen","document","combine","filter","styleMapping","writeStyleMap","toArrayBuffer","arrayBuffer","toBuffer","Buffer","from","Error"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/mammoth/lib/index.js"],"sourcesContent":["var _ = require(\"underscore\");\n\nvar docxReader = require(\"./docx/docx-reader\");\nvar docxStyleMap = require(\"./docx/style-map\");\nvar DocumentConverter = require(\"./document-to-html\").DocumentConverter;\nvar convertElementToRawText = require(\"./raw-text\").convertElementToRawText;\nvar readStyle = require(\"./style-reader\").readStyle;\nvar readOptions = require(\"./options-reader\").readOptions;\nvar unzip = require(\"./unzip\");\nvar Result = require(\"./results\").Result;\n\nexports.convertToHtml = convertToHtml;\nexports.convertToMarkdown = convertToMarkdown;\nexports.convert = convert;\nexports.extractRawText = extractRawText;\nexports.images = require(\"./images\");\nexports.transforms = require(\"./transforms\");\nexports.underline = require(\"./underline\");\nexports.embedStyleMap = embedStyleMap;\nexports.readEmbeddedStyleMap = readEmbeddedStyleMap;\n\nfunction convertToHtml(input, options) {\n    return convert(input, options);\n}\n\nfunction convertToMarkdown(input, options) {\n    var markdownOptions = Object.create(options || {});\n    markdownOptions.outputFormat = \"markdown\";\n    return convert(input, markdownOptions);\n}\n\nfunction convert(input, options) {\n    options = readOptions(options);\n\n    return unzip.openZip(input)\n        .tap(function(docxFile) {\n            return docxStyleMap.readStyleMap(docxFile).then(function(styleMap) {\n                options.embeddedStyleMap = styleMap;\n            });\n        })\n        .then(function(docxFile) {\n            return docxReader.read(docxFile, input)\n                .then(function(documentResult) {\n                    return documentResult.map(options.transformDocument);\n                })\n                .then(function(documentResult) {\n                    return convertDocumentToHtml(documentResult, options);\n                });\n        });\n}\n\nfunction readEmbeddedStyleMap(input) {\n    return unzip.openZip(input)\n        .then(docxStyleMap.readStyleMap);\n}\n\nfunction convertDocumentToHtml(documentResult, options) {\n    var styleMapResult = parseStyleMap(options.readStyleMap());\n    var parsedOptions = _.extend({}, options, {\n        styleMap: styleMapResult.value\n    });\n    var documentConverter = new DocumentConverter(parsedOptions);\n\n    return documentResult.flatMapThen(function(document) {\n        return styleMapResult.flatMapThen(function(styleMap) {\n            return documentConverter.convertToHtml(document);\n        });\n    });\n}\n\nfunction parseStyleMap(styleMap) {\n    return Result.combine((styleMap || []).map(readStyle))\n        .map(function(styleMap) {\n            return styleMap.filter(function(styleMapping) {\n                return !!styleMapping;\n            });\n        });\n}\n\n\nfunction extractRawText(input) {\n    return unzip.openZip(input)\n        .then(docxReader.read)\n        .then(function(documentResult) {\n            return documentResult.map(convertElementToRawText);\n        });\n}\n\nfunction embedStyleMap(input, styleMap) {\n    return unzip.openZip(input)\n        .tap(function(docxFile) {\n            return docxStyleMap.writeStyleMap(docxFile, styleMap);\n        })\n        .then(function(docxFile) {\n            return docxFile.toArrayBuffer();\n        })\n        .then(function(arrayBuffer) {\n            return {\n                toArrayBuffer: function() {\n                    return arrayBuffer;\n                },\n                toBuffer: function() {\n                    return Buffer.from(arrayBuffer);\n                }\n            };\n        });\n}\n\nexports.styleMapping = function() {\n    throw new Error('Use a raw string instead of mammoth.styleMapping e.g. \"p[style-name=\\'Title\\'] => h1\" instead of mammoth.styleMapping(\"p[style-name=\\'Title\\'] => h1\")');\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}