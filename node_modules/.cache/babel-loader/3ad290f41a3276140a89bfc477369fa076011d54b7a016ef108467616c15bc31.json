{"ast":null,"code":"var _ = require(\"underscore\");\nvar lop = require(\"lop\");\nvar documentMatchers = require(\"./styles/document-matchers\");\nvar htmlPaths = require(\"./styles/html-paths\");\nvar tokenise = require(\"./styles/parser/tokeniser\").tokenise;\nvar results = require(\"./results\");\nexports.readHtmlPath = readHtmlPath;\nexports.readDocumentMatcher = readDocumentMatcher;\nexports.readStyle = readStyle;\nfunction readStyle(string) {\n  return parseString(styleRule, string);\n}\nfunction createStyleRule() {\n  return lop.rules.sequence(lop.rules.sequence.capture(documentMatcherRule()), lop.rules.tokenOfType(\"whitespace\"), lop.rules.tokenOfType(\"arrow\"), lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"whitespace\"), lop.rules.sequence.capture(htmlPathRule())).head())), lop.rules.tokenOfType(\"end\")).map(function (documentMatcher, htmlPath) {\n    return {\n      from: documentMatcher,\n      to: htmlPath.valueOrElse(htmlPaths.empty)\n    };\n  });\n}\nfunction readDocumentMatcher(string) {\n  return parseString(documentMatcherRule(), string);\n}\nfunction documentMatcherRule() {\n  var sequence = lop.rules.sequence;\n  var identifierToConstant = function (identifier, constant) {\n    return lop.rules.then(lop.rules.token(\"identifier\", identifier), function () {\n      return constant;\n    });\n  };\n  var paragraphRule = identifierToConstant(\"p\", documentMatchers.paragraph);\n  var runRule = identifierToConstant(\"r\", documentMatchers.run);\n  var elementTypeRule = lop.rules.firstOf(\"p or r or table\", paragraphRule, runRule);\n  var styleIdRule = lop.rules.then(classRule, function (styleId) {\n    return {\n      styleId: styleId\n    };\n  });\n  var styleNameMatcherRule = lop.rules.firstOf(\"style name matcher\", lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType(\"equals\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function (styleName) {\n    return {\n      styleName: documentMatchers.equalTo(styleName)\n    };\n  }), lop.rules.then(lop.rules.sequence(lop.rules.tokenOfType(\"startsWith\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(stringRule)).head(), function (styleName) {\n    return {\n      styleName: documentMatchers.startsWith(styleName)\n    };\n  }));\n  var styleNameRule = lop.rules.sequence(lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.sequence.cut(), lop.rules.token(\"identifier\", \"style-name\"), lop.rules.sequence.capture(styleNameMatcherRule), lop.rules.tokenOfType(\"close-square-bracket\")).head();\n  var listTypeRule = lop.rules.firstOf(\"list type\", identifierToConstant(\"ordered-list\", {\n    isOrdered: true\n  }), identifierToConstant(\"unordered-list\", {\n    isOrdered: false\n  }));\n  var listRule = sequence(lop.rules.tokenOfType(\"colon\"), sequence.capture(listTypeRule), sequence.cut(), lop.rules.tokenOfType(\"open-paren\"), sequence.capture(integerRule), lop.rules.tokenOfType(\"close-paren\")).map(function (listType, levelNumber) {\n    return {\n      list: {\n        isOrdered: listType.isOrdered,\n        levelIndex: levelNumber - 1\n      }\n    };\n  });\n  function createMatcherSuffixesRule(rules) {\n    var matcherSuffix = lop.rules.firstOf.apply(lop.rules.firstOf, [\"matcher suffix\"].concat(rules));\n    var matcherSuffixes = lop.rules.zeroOrMore(matcherSuffix);\n    return lop.rules.then(matcherSuffixes, function (suffixes) {\n      var matcherOptions = {};\n      suffixes.forEach(function (suffix) {\n        _.extend(matcherOptions, suffix);\n      });\n      return matcherOptions;\n    });\n  }\n  var paragraphOrRun = sequence(sequence.capture(elementTypeRule), sequence.capture(createMatcherSuffixesRule([styleIdRule, styleNameRule, listRule]))).map(function (createMatcher, matcherOptions) {\n    return createMatcher(matcherOptions);\n  });\n  var table = sequence(lop.rules.token(\"identifier\", \"table\"), sequence.capture(createMatcherSuffixesRule([styleIdRule, styleNameRule]))).map(function (options) {\n    return documentMatchers.table(options);\n  });\n  var bold = identifierToConstant(\"b\", documentMatchers.bold);\n  var italic = identifierToConstant(\"i\", documentMatchers.italic);\n  var underline = identifierToConstant(\"u\", documentMatchers.underline);\n  var strikethrough = identifierToConstant(\"strike\", documentMatchers.strikethrough);\n  var allCaps = identifierToConstant(\"all-caps\", documentMatchers.allCaps);\n  var smallCaps = identifierToConstant(\"small-caps\", documentMatchers.smallCaps);\n  var commentReference = identifierToConstant(\"comment-reference\", documentMatchers.commentReference);\n  var breakMatcher = sequence(lop.rules.token(\"identifier\", \"br\"), sequence.cut(), lop.rules.tokenOfType(\"open-square-bracket\"), lop.rules.token(\"identifier\", \"type\"), lop.rules.tokenOfType(\"equals\"), sequence.capture(stringRule), lop.rules.tokenOfType(\"close-square-bracket\")).map(function (breakType) {\n    switch (breakType) {\n      case \"line\":\n        return documentMatchers.lineBreak;\n      case \"page\":\n        return documentMatchers.pageBreak;\n      case \"column\":\n        return documentMatchers.columnBreak;\n      default:\n      // TODO: handle unknown document matchers\n    }\n  });\n\n  return lop.rules.firstOf(\"element type\", paragraphOrRun, table, bold, italic, underline, strikethrough, allCaps, smallCaps, commentReference, breakMatcher);\n}\nfunction readHtmlPath(string) {\n  return parseString(htmlPathRule(), string);\n}\nfunction htmlPathRule() {\n  var capture = lop.rules.sequence.capture;\n  var whitespaceRule = lop.rules.tokenOfType(\"whitespace\");\n  var freshRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"colon\"), lop.rules.token(\"identifier\", \"fresh\"))), function (option) {\n    return option.map(function () {\n      return true;\n    }).valueOrElse(false);\n  });\n  var separatorRule = lop.rules.then(lop.rules.optional(lop.rules.sequence(lop.rules.tokenOfType(\"colon\"), lop.rules.token(\"identifier\", \"separator\"), lop.rules.tokenOfType(\"open-paren\"), capture(stringRule), lop.rules.tokenOfType(\"close-paren\")).head()), function (option) {\n    return option.valueOrElse(\"\");\n  });\n  var tagNamesRule = lop.rules.oneOrMoreWithSeparator(identifierRule, lop.rules.tokenOfType(\"choice\"));\n  var styleElementRule = lop.rules.sequence(capture(tagNamesRule), capture(lop.rules.zeroOrMore(classRule)), capture(freshRule), capture(separatorRule)).map(function (tagName, classNames, fresh, separator) {\n    var attributes = {};\n    var options = {};\n    if (classNames.length > 0) {\n      attributes[\"class\"] = classNames.join(\" \");\n    }\n    if (fresh) {\n      options.fresh = true;\n    }\n    if (separator) {\n      options.separator = separator;\n    }\n    return htmlPaths.element(tagName, attributes, options);\n  });\n  return lop.rules.firstOf(\"html path\", lop.rules.then(lop.rules.tokenOfType(\"bang\"), function () {\n    return htmlPaths.ignore;\n  }), lop.rules.then(lop.rules.zeroOrMoreWithSeparator(styleElementRule, lop.rules.sequence(whitespaceRule, lop.rules.tokenOfType(\"gt\"), whitespaceRule)), htmlPaths.elements));\n}\nvar identifierRule = lop.rules.then(lop.rules.tokenOfType(\"identifier\"), decodeEscapeSequences);\nvar integerRule = lop.rules.tokenOfType(\"integer\");\nvar stringRule = lop.rules.then(lop.rules.tokenOfType(\"string\"), decodeEscapeSequences);\nvar escapeSequences = {\n  \"n\": \"\\n\",\n  \"r\": \"\\r\",\n  \"t\": \"\\t\"\n};\nfunction decodeEscapeSequences(value) {\n  return value.replace(/\\\\(.)/g, function (match, code) {\n    return escapeSequences[code] || code;\n  });\n}\nvar classRule = lop.rules.sequence(lop.rules.tokenOfType(\"dot\"), lop.rules.sequence.cut(), lop.rules.sequence.capture(identifierRule)).head();\nfunction parseString(rule, string) {\n  var tokens = tokenise(string);\n  var parser = lop.Parser();\n  var parseResult = parser.parseTokens(rule, tokens);\n  if (parseResult.isSuccess()) {\n    return results.success(parseResult.value());\n  } else {\n    return new results.Result(null, [results.warning(describeFailure(string, parseResult))]);\n  }\n}\nfunction describeFailure(input, parseResult) {\n  return \"Did not understand this style mapping, so ignored it: \" + input + \"\\n\" + parseResult.errors().map(describeError).join(\"\\n\");\n}\nfunction describeError(error) {\n  return \"Error was at character number \" + error.characterNumber() + \": \" + \"Expected \" + error.expected + \" but got \" + error.actual;\n}\nvar styleRule = createStyleRule();","map":{"version":3,"names":["_","require","lop","documentMatchers","htmlPaths","tokenise","results","exports","readHtmlPath","readDocumentMatcher","readStyle","string","parseString","styleRule","createStyleRule","rules","sequence","capture","documentMatcherRule","tokenOfType","optional","htmlPathRule","head","map","documentMatcher","htmlPath","from","to","valueOrElse","empty","identifierToConstant","identifier","constant","then","token","paragraphRule","paragraph","runRule","run","elementTypeRule","firstOf","styleIdRule","classRule","styleId","styleNameMatcherRule","cut","stringRule","styleName","equalTo","startsWith","styleNameRule","listTypeRule","isOrdered","listRule","integerRule","listType","levelNumber","list","levelIndex","createMatcherSuffixesRule","matcherSuffix","apply","concat","matcherSuffixes","zeroOrMore","suffixes","matcherOptions","forEach","suffix","extend","paragraphOrRun","createMatcher","table","options","bold","italic","underline","strikethrough","allCaps","smallCaps","commentReference","breakMatcher","breakType","lineBreak","pageBreak","columnBreak","whitespaceRule","freshRule","option","separatorRule","tagNamesRule","oneOrMoreWithSeparator","identifierRule","styleElementRule","tagName","classNames","fresh","separator","attributes","length","join","element","ignore","zeroOrMoreWithSeparator","elements","decodeEscapeSequences","escapeSequences","value","replace","match","code","rule","tokens","parser","Parser","parseResult","parseTokens","isSuccess","success","Result","warning","describeFailure","input","errors","describeError","error","characterNumber","expected","actual"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/mammoth/lib/style-reader.js"],"sourcesContent":["var _ = require(\"underscore\");\nvar lop = require(\"lop\");\n\nvar documentMatchers = require(\"./styles/document-matchers\");\nvar htmlPaths = require(\"./styles/html-paths\");\nvar tokenise = require(\"./styles/parser/tokeniser\").tokenise;\nvar results = require(\"./results\");\n\nexports.readHtmlPath = readHtmlPath;\nexports.readDocumentMatcher = readDocumentMatcher;\nexports.readStyle = readStyle;\n\n\nfunction readStyle(string) {\n    return parseString(styleRule, string);\n}\n\nfunction createStyleRule() {\n    return lop.rules.sequence(\n        lop.rules.sequence.capture(documentMatcherRule()),\n        lop.rules.tokenOfType(\"whitespace\"),\n        lop.rules.tokenOfType(\"arrow\"),\n        lop.rules.sequence.capture(lop.rules.optional(lop.rules.sequence(\n            lop.rules.tokenOfType(\"whitespace\"),\n            lop.rules.sequence.capture(htmlPathRule())\n        ).head())),\n        lop.rules.tokenOfType(\"end\")\n    ).map(function(documentMatcher, htmlPath) {\n        return {\n            from: documentMatcher,\n            to: htmlPath.valueOrElse(htmlPaths.empty)\n        };\n    });\n}\n\nfunction readDocumentMatcher(string) {\n    return parseString(documentMatcherRule(), string);\n}\n\nfunction documentMatcherRule() {\n    var sequence = lop.rules.sequence;\n\n    var identifierToConstant = function(identifier, constant) {\n        return lop.rules.then(\n            lop.rules.token(\"identifier\", identifier),\n            function() {\n                return constant;\n            }\n        );\n    };\n\n    var paragraphRule = identifierToConstant(\"p\", documentMatchers.paragraph);\n    var runRule = identifierToConstant(\"r\", documentMatchers.run);\n\n    var elementTypeRule = lop.rules.firstOf(\"p or r or table\",\n        paragraphRule,\n        runRule\n    );\n\n    var styleIdRule = lop.rules.then(\n        classRule,\n        function(styleId) {\n            return {styleId: styleId};\n        }\n    );\n\n    var styleNameMatcherRule = lop.rules.firstOf(\"style name matcher\",\n        lop.rules.then(\n            lop.rules.sequence(\n                lop.rules.tokenOfType(\"equals\"),\n                lop.rules.sequence.cut(),\n                lop.rules.sequence.capture(stringRule)\n            ).head(),\n            function(styleName) {\n                return {styleName: documentMatchers.equalTo(styleName)};\n            }\n        ),\n        lop.rules.then(\n            lop.rules.sequence(\n                lop.rules.tokenOfType(\"startsWith\"),\n                lop.rules.sequence.cut(),\n                lop.rules.sequence.capture(stringRule)\n            ).head(),\n            function(styleName) {\n                return {styleName: documentMatchers.startsWith(styleName)};\n            }\n        )\n    );\n\n    var styleNameRule = lop.rules.sequence(\n        lop.rules.tokenOfType(\"open-square-bracket\"),\n        lop.rules.sequence.cut(),\n        lop.rules.token(\"identifier\", \"style-name\"),\n        lop.rules.sequence.capture(styleNameMatcherRule),\n        lop.rules.tokenOfType(\"close-square-bracket\")\n    ).head();\n\n\n    var listTypeRule = lop.rules.firstOf(\"list type\",\n        identifierToConstant(\"ordered-list\", {isOrdered: true}),\n        identifierToConstant(\"unordered-list\", {isOrdered: false})\n    );\n    var listRule = sequence(\n        lop.rules.tokenOfType(\"colon\"),\n        sequence.capture(listTypeRule),\n        sequence.cut(),\n        lop.rules.tokenOfType(\"open-paren\"),\n        sequence.capture(integerRule),\n        lop.rules.tokenOfType(\"close-paren\")\n    ).map(function(listType, levelNumber) {\n        return {\n            list: {\n                isOrdered: listType.isOrdered,\n                levelIndex: levelNumber - 1\n            }\n        };\n    });\n\n    function createMatcherSuffixesRule(rules) {\n        var matcherSuffix = lop.rules.firstOf.apply(\n            lop.rules.firstOf,\n            [\"matcher suffix\"].concat(rules)\n        );\n        var matcherSuffixes = lop.rules.zeroOrMore(matcherSuffix);\n        return lop.rules.then(matcherSuffixes, function(suffixes) {\n            var matcherOptions = {};\n            suffixes.forEach(function(suffix) {\n                _.extend(matcherOptions, suffix);\n            });\n            return matcherOptions;\n        });\n    }\n\n    var paragraphOrRun = sequence(\n        sequence.capture(elementTypeRule),\n        sequence.capture(createMatcherSuffixesRule([\n            styleIdRule,\n            styleNameRule,\n            listRule\n        ]))\n    ).map(function(createMatcher, matcherOptions) {\n        return createMatcher(matcherOptions);\n    });\n\n    var table = sequence(\n        lop.rules.token(\"identifier\", \"table\"),\n        sequence.capture(createMatcherSuffixesRule([\n            styleIdRule,\n            styleNameRule\n        ]))\n    ).map(function(options) {\n        return documentMatchers.table(options);\n    });\n\n    var bold = identifierToConstant(\"b\", documentMatchers.bold);\n    var italic = identifierToConstant(\"i\", documentMatchers.italic);\n    var underline = identifierToConstant(\"u\", documentMatchers.underline);\n    var strikethrough = identifierToConstant(\"strike\", documentMatchers.strikethrough);\n    var allCaps = identifierToConstant(\"all-caps\", documentMatchers.allCaps);\n    var smallCaps = identifierToConstant(\"small-caps\", documentMatchers.smallCaps);\n    var commentReference = identifierToConstant(\"comment-reference\", documentMatchers.commentReference);\n\n    var breakMatcher = sequence(\n        lop.rules.token(\"identifier\", \"br\"),\n        sequence.cut(),\n        lop.rules.tokenOfType(\"open-square-bracket\"),\n        lop.rules.token(\"identifier\", \"type\"),\n        lop.rules.tokenOfType(\"equals\"),\n        sequence.capture(stringRule),\n        lop.rules.tokenOfType(\"close-square-bracket\")\n    ).map(function(breakType) {\n        switch (breakType) {\n        case \"line\":\n            return documentMatchers.lineBreak;\n        case \"page\":\n            return documentMatchers.pageBreak;\n        case \"column\":\n            return documentMatchers.columnBreak;\n        default:\n            // TODO: handle unknown document matchers\n        }\n    });\n\n    return lop.rules.firstOf(\"element type\",\n        paragraphOrRun,\n        table,\n        bold,\n        italic,\n        underline,\n        strikethrough,\n        allCaps,\n        smallCaps,\n        commentReference,\n        breakMatcher\n    );\n}\n\nfunction readHtmlPath(string) {\n    return parseString(htmlPathRule(), string);\n}\n\nfunction htmlPathRule() {\n    var capture = lop.rules.sequence.capture;\n    var whitespaceRule = lop.rules.tokenOfType(\"whitespace\");\n    var freshRule = lop.rules.then(\n        lop.rules.optional(lop.rules.sequence(\n            lop.rules.tokenOfType(\"colon\"),\n            lop.rules.token(\"identifier\", \"fresh\")\n        )),\n        function(option) {\n            return option.map(function() {\n                return true;\n            }).valueOrElse(false);\n        }\n    );\n\n    var separatorRule = lop.rules.then(\n        lop.rules.optional(lop.rules.sequence(\n            lop.rules.tokenOfType(\"colon\"),\n            lop.rules.token(\"identifier\", \"separator\"),\n            lop.rules.tokenOfType(\"open-paren\"),\n            capture(stringRule),\n            lop.rules.tokenOfType(\"close-paren\")\n        ).head()),\n        function(option) {\n            return option.valueOrElse(\"\");\n        }\n    );\n\n    var tagNamesRule = lop.rules.oneOrMoreWithSeparator(\n        identifierRule,\n        lop.rules.tokenOfType(\"choice\")\n    );\n\n    var styleElementRule = lop.rules.sequence(\n        capture(tagNamesRule),\n        capture(lop.rules.zeroOrMore(classRule)),\n        capture(freshRule),\n        capture(separatorRule)\n    ).map(function(tagName, classNames, fresh, separator) {\n        var attributes = {};\n        var options = {};\n        if (classNames.length > 0) {\n            attributes[\"class\"] = classNames.join(\" \");\n        }\n        if (fresh) {\n            options.fresh = true;\n        }\n        if (separator) {\n            options.separator = separator;\n        }\n        return htmlPaths.element(tagName, attributes, options);\n    });\n\n    return lop.rules.firstOf(\"html path\",\n        lop.rules.then(lop.rules.tokenOfType(\"bang\"), function() {\n            return htmlPaths.ignore;\n        }),\n        lop.rules.then(\n            lop.rules.zeroOrMoreWithSeparator(\n                styleElementRule,\n                lop.rules.sequence(\n                    whitespaceRule,\n                    lop.rules.tokenOfType(\"gt\"),\n                    whitespaceRule\n                )\n            ),\n            htmlPaths.elements\n        )\n    );\n}\n\nvar identifierRule = lop.rules.then(\n    lop.rules.tokenOfType(\"identifier\"),\n    decodeEscapeSequences\n);\nvar integerRule = lop.rules.tokenOfType(\"integer\");\n\nvar stringRule = lop.rules.then(\n    lop.rules.tokenOfType(\"string\"),\n    decodeEscapeSequences\n);\n\nvar escapeSequences = {\n    \"n\": \"\\n\",\n    \"r\": \"\\r\",\n    \"t\": \"\\t\"\n};\n\nfunction decodeEscapeSequences(value) {\n    return value.replace(/\\\\(.)/g, function(match, code) {\n        return escapeSequences[code] || code;\n    });\n}\n\nvar classRule = lop.rules.sequence(\n    lop.rules.tokenOfType(\"dot\"),\n    lop.rules.sequence.cut(),\n    lop.rules.sequence.capture(identifierRule)\n).head();\n\nfunction parseString(rule, string) {\n    var tokens = tokenise(string);\n    var parser = lop.Parser();\n    var parseResult = parser.parseTokens(rule, tokens);\n    if (parseResult.isSuccess()) {\n        return results.success(parseResult.value());\n    } else {\n        return new results.Result(null, [results.warning(describeFailure(string, parseResult))]);\n    }\n}\n\nfunction describeFailure(input, parseResult) {\n    return \"Did not understand this style mapping, so ignored it: \" + input + \"\\n\" +\n        parseResult.errors().map(describeError).join(\"\\n\");\n}\n\nfunction describeError(error) {\n    return \"Error was at character number \" + error.characterNumber() + \": \" +\n        \"Expected \" + error.expected + \" but got \" + error.actual;\n}\n\nvar styleRule = createStyleRule();\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}