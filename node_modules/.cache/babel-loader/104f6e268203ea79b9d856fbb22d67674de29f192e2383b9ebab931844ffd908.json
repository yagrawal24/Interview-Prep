{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLCData,\n    XMLComment,\n    XMLDTDAttList,\n    XMLDTDElement,\n    XMLDTDEntity,\n    XMLDTDNotation,\n    XMLDeclaration,\n    XMLDocType,\n    XMLDummy,\n    XMLElement,\n    XMLProcessingInstruction,\n    XMLRaw,\n    XMLStreamWriter,\n    XMLText,\n    XMLWriterBase,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLElement = require('./XMLElement');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDummy = require('./XMLDummy');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLWriterBase = require('./XMLWriterBase');\n  module.exports = XMLStreamWriter = function (superClass) {\n    extend(XMLStreamWriter, superClass);\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n    XMLStreamWriter.prototype.document = function (doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        if (child instanceof XMLDummy) {\n          continue;\n        }\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n    XMLStreamWriter.prototype.attribute = function (att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n    XMLStreamWriter.prototype.cdata = function (node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n    XMLStreamWriter.prototype.comment = function (node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n    XMLStreamWriter.prototype.declaration = function (node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n    XMLStreamWriter.prototype.docType = function (node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n    XMLStreamWriter.prototype.element = function (node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function (e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            case !(child instanceof XMLDummy):\n              '';\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n    XMLStreamWriter.prototype.processingInstruction = function (node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n    XMLStreamWriter.prototype.raw = function (node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n    XMLStreamWriter.prototype.text = function (node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n    XMLStreamWriter.prototype.dtdAttList = function (node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n    XMLStreamWriter.prototype.dtdElement = function (node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n    XMLStreamWriter.prototype.dtdEntity = function (node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n    XMLStreamWriter.prototype.dtdNotation = function (node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n    XMLStreamWriter.prototype.endline = function (node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n    return XMLStreamWriter;\n  }(XMLWriterBase);\n}).call(this);","map":{"version":3,"names":["XMLCData","XMLComment","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","XMLDeclaration","XMLDocType","XMLDummy","XMLElement","XMLProcessingInstruction","XMLRaw","XMLStreamWriter","XMLText","XMLWriterBase","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","stream","options","document","doc","i","j","len","len1","ref","ref1","results","children","length","isLastRootNode","push","declaration","docType","comment","processingInstruction","element","attribute","att","write","name","value","cdata","node","level","space","text","endline","version","encoding","standalone","spacebeforeslash","root","pubID","sysID","dtdAttList","dtdElement","dtdEntity","dtdNotation","Error","attributes","every","e","allowEmpty","pretty","newline","raw","target","elementName","attributeName","attributeType","defaultValueType","defaultValue","pe","nData"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/xmlbuilder/lib/XMLStreamWriter.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStreamWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      XMLStreamWriter.__super__.constructor.call(this, options);\n      this.stream = stream;\n    }\n\n    XMLStreamWriter.prototype.document = function(doc) {\n      var child, i, j, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        child.isLastRootNode = false;\n      }\n      doc.children[doc.children.length - 1].isLastRootNode = true;\n      ref1 = doc.children;\n      results = [];\n      for (j = 0, len1 = ref1.length; j < len1; j++) {\n        child = ref1[j];\n        if (child instanceof XMLDummy) {\n          continue;\n        }\n        switch (false) {\n          case !(child instanceof XMLDeclaration):\n            results.push(this.declaration(child));\n            break;\n          case !(child instanceof XMLDocType):\n            results.push(this.docType(child));\n            break;\n          case !(child instanceof XMLComment):\n            results.push(this.comment(child));\n            break;\n          case !(child instanceof XMLProcessingInstruction):\n            results.push(this.processingInstruction(child));\n            break;\n          default:\n            results.push(this.element(child));\n        }\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att) {\n      return this.stream.write(' ' + att.name + '=\"' + att.value + '\"');\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, level) {\n      return this.stream.write(this.space(level) + '<![CDATA[' + node.text + ']]>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, level) {\n      return this.stream.write(this.space(level) + '<!-- ' + node.text + ' -->' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, level) {\n      this.stream.write(this.space(level));\n      this.stream.write('<?xml version=\"' + node.version + '\"');\n      if (node.encoding != null) {\n        this.stream.write(' encoding=\"' + node.encoding + '\"');\n      }\n      if (node.standalone != null) {\n        this.stream.write(' standalone=\"' + node.standalone + '\"');\n      }\n      this.stream.write(this.spacebeforeslash + '?>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, level) {\n      var child, i, len, ref;\n      level || (level = 0);\n      this.stream.write(this.space(level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node));\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          switch (false) {\n            case !(child instanceof XMLDTDAttList):\n              this.dtdAttList(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDElement):\n              this.dtdElement(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDEntity):\n              this.dtdEntity(child, level + 1);\n              break;\n            case !(child instanceof XMLDTDNotation):\n              this.dtdNotation(child, level + 1);\n              break;\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            default:\n              throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(']');\n      }\n      this.stream.write(this.spacebeforeslash + '>');\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.element = function(node, level) {\n      var att, child, i, len, name, ref, ref1, space;\n      level || (level = 0);\n      space = this.space(level);\n      this.stream.write(space + '<' + node.name);\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          this.stream.write('></' + node.name + '>');\n        } else {\n          this.stream.write(this.spacebeforeslash + '/>');\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        this.stream.write('>');\n        this.stream.write(node.children[0].value);\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.newline);\n        ref1 = node.children;\n        for (i = 0, len = ref1.length; i < len; i++) {\n          child = ref1[i];\n          switch (false) {\n            case !(child instanceof XMLCData):\n              this.cdata(child, level + 1);\n              break;\n            case !(child instanceof XMLComment):\n              this.comment(child, level + 1);\n              break;\n            case !(child instanceof XMLElement):\n              this.element(child, level + 1);\n              break;\n            case !(child instanceof XMLRaw):\n              this.raw(child, level + 1);\n              break;\n            case !(child instanceof XMLText):\n              this.text(child, level + 1);\n              break;\n            case !(child instanceof XMLProcessingInstruction):\n              this.processingInstruction(child, level + 1);\n              break;\n            case !(child instanceof XMLDummy):\n              '';\n              break;\n            default:\n              throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n          }\n        }\n        this.stream.write(space + '</' + node.name + '>');\n      }\n      return this.stream.write(this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, level) {\n      this.stream.write(this.space(level) + '<?' + node.target);\n      if (node.value) {\n        this.stream.write(' ' + node.value);\n      }\n      return this.stream.write(this.spacebeforeslash + '?>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, level) {\n      return this.stream.write(this.space(level) + node.value + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, level) {\n      this.stream.write(this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType);\n      if (node.defaultValueType !== '#DEFAULT') {\n        this.stream.write(' ' + node.defaultValueType);\n      }\n      if (node.defaultValue) {\n        this.stream.write(' \"' + node.defaultValue + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, level) {\n      this.stream.write(this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value);\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, level) {\n      this.stream.write(this.space(level) + '<!ENTITY');\n      if (node.pe) {\n        this.stream.write(' %');\n      }\n      this.stream.write(' ' + node.name);\n      if (node.value) {\n        this.stream.write(' \"' + node.value + '\"');\n      } else {\n        if (node.pubID && node.sysID) {\n          this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n        } else if (node.sysID) {\n          this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n        }\n        if (node.nData) {\n          this.stream.write(' NDATA ' + node.nData);\n        }\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, level) {\n      this.stream.write(this.space(level) + '<!NOTATION ' + node.name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.pubID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      return this.stream.write(this.spacebeforeslash + '>' + this.endline(node));\n    };\n\n    XMLStreamWriter.prototype.endline = function(node) {\n      if (!node.isLastRootNode) {\n        return this.newline;\n      } else {\n        return '';\n      }\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}