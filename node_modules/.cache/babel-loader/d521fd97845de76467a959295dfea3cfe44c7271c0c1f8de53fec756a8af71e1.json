{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLComment,\n    XMLNode,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLNode = require('./XMLNode');\n  module.exports = XMLComment = function (superClass) {\n    extend(XMLComment, superClass);\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.text = this.stringify.comment(text);\n    }\n    XMLComment.prototype.clone = function () {\n      return Object.create(this);\n    };\n    XMLComment.prototype.toString = function (options) {\n      return this.options.writer.set(options).comment(this);\n    };\n    return XMLComment;\n  }(XMLNode);\n}).call(this);","map":{"version":3,"names":["XMLComment","XMLNode","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","text","Error","debugInfo","stringify","comment","clone","Object","create","toString","options","writer","set"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/xmlbuilder/lib/XMLComment.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLComment, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.text = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.set(options).comment(this);\n    };\n\n    return XMLComment;\n\n  })(XMLNode);\n\n}).call(this);\n"],"mappings":"AAAA;AACA,CAAC,YAAW;EACV,IAAIA,UAAU;IAAEC,OAAO;IACrBC,MAAM,GAAG,SAAAA,CAASC,KAAK,EAAEC,MAAM,EAAE;MAAE,KAAK,IAAIC,GAAG,IAAID,MAAM,EAAE;QAAE,IAAIE,OAAO,CAACC,IAAI,CAACH,MAAM,EAAEC,GAAG,CAAC,EAAEF,KAAK,CAACE,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;MAAE;MAAE,SAASG,IAAIA,CAAA,EAAG;QAAE,IAAI,CAACC,WAAW,GAAGN,KAAK;MAAE;MAAEK,IAAI,CAACE,SAAS,GAAGN,MAAM,CAACM,SAAS;MAAEP,KAAK,CAACO,SAAS,GAAG,IAAIF,IAAI,CAAC,CAAC;MAAEL,KAAK,CAACQ,SAAS,GAAGP,MAAM,CAACM,SAAS;MAAE,OAAOP,KAAK;IAAE,CAAC;IAC1RG,OAAO,GAAG,CAAC,CAAC,CAACM,cAAc;EAE7BX,OAAO,GAAGY,OAAO,CAAC,WAAW,CAAC;EAE9BC,MAAM,CAACC,OAAO,GAAGf,UAAU,GAAI,UAASgB,UAAU,EAAE;IAClDd,MAAM,CAACF,UAAU,EAAEgB,UAAU,CAAC;IAE9B,SAAShB,UAAUA,CAACI,MAAM,EAAEa,IAAI,EAAE;MAChCjB,UAAU,CAACW,SAAS,CAACF,WAAW,CAACF,IAAI,CAAC,IAAI,EAAEH,MAAM,CAAC;MACnD,IAAIa,IAAI,IAAI,IAAI,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,wBAAwB,GAAG,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC;MAC9D;MACA,IAAI,CAACF,IAAI,GAAG,IAAI,CAACG,SAAS,CAACC,OAAO,CAACJ,IAAI,CAAC;IAC1C;IAEAjB,UAAU,CAACU,SAAS,CAACY,KAAK,GAAG,YAAW;MACtC,OAAOC,MAAM,CAACC,MAAM,CAAC,IAAI,CAAC;IAC5B,CAAC;IAEDxB,UAAU,CAACU,SAAS,CAACe,QAAQ,GAAG,UAASC,OAAO,EAAE;MAChD,OAAO,IAAI,CAACA,OAAO,CAACC,MAAM,CAACC,GAAG,CAACF,OAAO,CAAC,CAACL,OAAO,CAAC,IAAI,CAAC;IACvD,CAAC;IAED,OAAOrB,UAAU;EAEnB,CAAC,CAAEC,OAAO,CAAC;AAEb,CAAC,EAAEM,IAAI,CAAC,IAAI,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}