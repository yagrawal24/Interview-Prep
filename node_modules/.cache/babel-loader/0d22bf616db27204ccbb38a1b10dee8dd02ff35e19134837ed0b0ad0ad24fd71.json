{"ast":null,"code":"// Generated by CoffeeScript 1.12.7\n(function () {\n  var XMLCData,\n    XMLComment,\n    XMLDTDAttList,\n    XMLDTDElement,\n    XMLDTDEntity,\n    XMLDTDNotation,\n    XMLDeclaration,\n    XMLDocType,\n    XMLDummy,\n    XMLElement,\n    XMLProcessingInstruction,\n    XMLRaw,\n    XMLStringWriter,\n    XMLText,\n    XMLWriterBase,\n    extend = function (child, parent) {\n      for (var key in parent) {\n        if (hasProp.call(parent, key)) child[key] = parent[key];\n      }\n      function ctor() {\n        this.constructor = child;\n      }\n      ctor.prototype = parent.prototype;\n      child.prototype = new ctor();\n      child.__super__ = parent.prototype;\n      return child;\n    },\n    hasProp = {}.hasOwnProperty;\n  XMLDeclaration = require('./XMLDeclaration');\n  XMLDocType = require('./XMLDocType');\n  XMLCData = require('./XMLCData');\n  XMLComment = require('./XMLComment');\n  XMLElement = require('./XMLElement');\n  XMLRaw = require('./XMLRaw');\n  XMLText = require('./XMLText');\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n  XMLDummy = require('./XMLDummy');\n  XMLDTDAttList = require('./XMLDTDAttList');\n  XMLDTDElement = require('./XMLDTDElement');\n  XMLDTDEntity = require('./XMLDTDEntity');\n  XMLDTDNotation = require('./XMLDTDNotation');\n  XMLWriterBase = require('./XMLWriterBase');\n  module.exports = XMLStringWriter = function (superClass) {\n    extend(XMLStringWriter, superClass);\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n    XMLStringWriter.prototype.document = function (doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        if (child instanceof XMLDummy) {\n          continue;\n        }\n        r += function () {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }.call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n    XMLStringWriter.prototype.attribute = function (att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n    XMLStringWriter.prototype.cdata = function (node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n    XMLStringWriter.prototype.comment = function (node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n    XMLStringWriter.prototype.declaration = function (node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n    XMLStringWriter.prototype.docType = function (node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += function () {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }.call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n    XMLStringWriter.prototype.element = function (node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function (e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && node.children[0].value != null) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += function () {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              case !(child instanceof XMLDummy):\n                return '';\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }.call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n    XMLStringWriter.prototype.processingInstruction = function (node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n    XMLStringWriter.prototype.raw = function (node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n    XMLStringWriter.prototype.text = function (node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n    XMLStringWriter.prototype.dtdAttList = function (node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n    XMLStringWriter.prototype.dtdElement = function (node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n    XMLStringWriter.prototype.dtdEntity = function (node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n    XMLStringWriter.prototype.dtdNotation = function (node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n    XMLStringWriter.prototype.openNode = function (node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n    XMLStringWriter.prototype.closeNode = function (node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n    return XMLStringWriter;\n  }(XMLWriterBase);\n}).call(this);","map":{"version":3,"names":["XMLCData","XMLComment","XMLDTDAttList","XMLDTDElement","XMLDTDEntity","XMLDTDNotation","XMLDeclaration","XMLDocType","XMLDummy","XMLElement","XMLProcessingInstruction","XMLRaw","XMLStringWriter","XMLText","XMLWriterBase","extend","child","parent","key","hasProp","call","ctor","constructor","prototype","__super__","hasOwnProperty","require","module","exports","superClass","options","document","doc","i","len","r","ref","textispresent","children","length","declaration","docType","comment","processingInstruction","element","pretty","slice","newline","attribute","att","name","value","cdata","node","level","space","text","version","encoding","standalone","spacebeforeslash","root","pubID","sysID","dtdAttList","dtdElement","dtdEntity","dtdNotation","Error","j","len1","ref1","ref2","textispresentwasset","newlinedefault","prettydefault","attributes","every","e","allowEmpty","dontprettytextnodes","raw","target","elementName","attributeName","attributeType","defaultValueType","defaultValue","pe","nData","openNode","rootNodeName","closeNode"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/xmlbuilder/lib/XMLStringWriter.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLText, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc) {\n      var child, i, len, r, ref;\n      this.textispresent = false;\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        if (child instanceof XMLDummy) {\n          continue;\n        }\n        r += (function() {\n          switch (false) {\n            case !(child instanceof XMLDeclaration):\n              return this.declaration(child);\n            case !(child instanceof XMLDocType):\n              return this.docType(child);\n            case !(child instanceof XMLComment):\n              return this.comment(child);\n            case !(child instanceof XMLProcessingInstruction):\n              return this.processingInstruction(child);\n            default:\n              return this.element(child, 0);\n          }\n        }).call(this);\n      }\n      if (this.pretty && r.slice(-this.newline.length) === this.newline) {\n        r = r.slice(0, -this.newline.length);\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.attribute = function(att) {\n      return ' ' + att.name + '=\"' + att.value + '\"';\n    };\n\n    XMLStringWriter.prototype.cdata = function(node, level) {\n      return this.space(level) + '<![CDATA[' + node.text + ']]>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.comment = function(node, level) {\n      return this.space(level) + '<!-- ' + node.text + ' -->' + this.newline;\n    };\n\n    XMLStringWriter.prototype.declaration = function(node, level) {\n      var r;\n      r = this.space(level);\n      r += '<?xml version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      r += this.spacebeforeslash + '?>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.docType = function(node, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      r = this.space(level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.newline;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLDTDAttList):\n                return this.dtdAttList(child, level + 1);\n              case !(child instanceof XMLDTDElement):\n                return this.dtdElement(child, level + 1);\n              case !(child instanceof XMLDTDEntity):\n                return this.dtdEntity(child, level + 1);\n              case !(child instanceof XMLDTDNotation):\n                return this.dtdNotation(child, level + 1);\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              default:\n                throw new Error(\"Unknown DTD node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        r += ']';\n      }\n      r += this.spacebeforeslash + '>';\n      r += this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.element = function(node, level) {\n      var att, child, i, j, len, len1, name, r, ref, ref1, ref2, space, textispresentwasset;\n      level || (level = 0);\n      textispresentwasset = false;\n      if (this.textispresent) {\n        this.newline = '';\n        this.pretty = false;\n      } else {\n        this.newline = this.newlinedefault;\n        this.pretty = this.prettydefault;\n      }\n      space = this.space(level);\n      r = '';\n      r += space + '<' + node.name;\n      ref = node.attributes;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att);\n      }\n      if (node.children.length === 0 || node.children.every(function(e) {\n        return e.value === '';\n      })) {\n        if (this.allowEmpty) {\n          r += '></' + node.name + '>' + this.newline;\n        } else {\n          r += this.spacebeforeslash + '/>' + this.newline;\n        }\n      } else if (this.pretty && node.children.length === 1 && (node.children[0].value != null)) {\n        r += '>';\n        r += node.children[0].value;\n        r += '</' + node.name + '>' + this.newline;\n      } else {\n        if (this.dontprettytextnodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if (child.value != null) {\n              this.textispresent++;\n              textispresentwasset = true;\n              break;\n            }\n          }\n        }\n        if (this.textispresent) {\n          this.newline = '';\n          this.pretty = false;\n          space = this.space(level);\n        }\n        r += '>' + this.newline;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += (function() {\n            switch (false) {\n              case !(child instanceof XMLCData):\n                return this.cdata(child, level + 1);\n              case !(child instanceof XMLComment):\n                return this.comment(child, level + 1);\n              case !(child instanceof XMLElement):\n                return this.element(child, level + 1);\n              case !(child instanceof XMLRaw):\n                return this.raw(child, level + 1);\n              case !(child instanceof XMLText):\n                return this.text(child, level + 1);\n              case !(child instanceof XMLProcessingInstruction):\n                return this.processingInstruction(child, level + 1);\n              case !(child instanceof XMLDummy):\n                return '';\n              default:\n                throw new Error(\"Unknown XML node type: \" + child.constructor.name);\n            }\n          }).call(this);\n        }\n        if (textispresentwasset) {\n          this.textispresent--;\n        }\n        if (!this.textispresent) {\n          this.newline = this.newlinedefault;\n          this.pretty = this.prettydefault;\n        }\n        r += space + '</' + node.name + '>' + this.newline;\n      }\n      return r;\n    };\n\n    XMLStringWriter.prototype.processingInstruction = function(node, level) {\n      var r;\n      r = this.space(level) + '<?' + node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      r += this.spacebeforeslash + '?>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.raw = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.text = function(node, level) {\n      return this.space(level) + node.value + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdAttList = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ATTLIST ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdElement = function(node, level) {\n      return this.space(level) + '<!ELEMENT ' + node.name + ' ' + node.value + this.spacebeforeslash + '>' + this.newline;\n    };\n\n    XMLStringWriter.prototype.dtdEntity = function(node, level) {\n      var r;\n      r = this.space(level) + '<!ENTITY';\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.dtdNotation = function(node, level) {\n      var r;\n      r = this.space(level) + '<!NOTATION ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      r += this.spacebeforeslash + '>' + this.newline;\n      return r;\n    };\n\n    XMLStringWriter.prototype.openNode = function(node, level) {\n      var att, name, r, ref;\n      level || (level = 0);\n      if (node instanceof XMLElement) {\n        r = this.space(level) + '<' + node.name;\n        ref = node.attributes;\n        for (name in ref) {\n          if (!hasProp.call(ref, name)) continue;\n          att = ref[name];\n          r += this.attribute(att);\n        }\n        r += (node.children ? '>' : '/>') + this.newline;\n        return r;\n      } else {\n        r = this.space(level) + '<!DOCTYPE ' + node.rootNodeName;\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        r += (node.children ? ' [' : '>') + this.newline;\n        return r;\n      }\n    };\n\n    XMLStringWriter.prototype.closeNode = function(node, level) {\n      level || (level = 0);\n      switch (false) {\n        case !(node instanceof XMLElement):\n          return this.space(level) + '</' + node.name + '>' + this.newline;\n        case !(node instanceof XMLDocType):\n          return this.space(level) + ']>' + this.newline;\n      }\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}