{"ast":null,"code":"var rules = require(\"./rules\");\nvar results = require(\"./parsing-results\");\nexports.parser = function (name, prefixRules, infixRuleBuilders) {\n  var self = {\n    rule: rule,\n    leftAssociative: leftAssociative,\n    rightAssociative: rightAssociative\n  };\n  var infixRules = new InfixRules(infixRuleBuilders.map(createInfixRule));\n  var prefixRule = rules.firstOf(name, prefixRules);\n  function createInfixRule(infixRuleBuilder) {\n    return {\n      name: infixRuleBuilder.name,\n      rule: lazyRule(infixRuleBuilder.ruleBuilder.bind(null, self))\n    };\n  }\n  function rule() {\n    return createRule(infixRules);\n  }\n  function leftAssociative(name) {\n    return createRule(infixRules.untilExclusive(name));\n  }\n  function rightAssociative(name) {\n    return createRule(infixRules.untilInclusive(name));\n  }\n  function createRule(infixRules) {\n    return apply.bind(null, infixRules);\n  }\n  function apply(infixRules, tokens) {\n    var leftResult = prefixRule(tokens);\n    if (leftResult.isSuccess()) {\n      return infixRules.apply(leftResult);\n    } else {\n      return leftResult;\n    }\n  }\n  return self;\n};\nfunction InfixRules(infixRules) {\n  function untilExclusive(name) {\n    return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name)));\n  }\n  function untilInclusive(name) {\n    return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name) + 1));\n  }\n  function ruleNames() {\n    return infixRules.map(function (rule) {\n      return rule.name;\n    });\n  }\n  function apply(leftResult) {\n    var currentResult;\n    var source;\n    while (true) {\n      currentResult = applyToTokens(leftResult.remaining());\n      if (currentResult.isSuccess()) {\n        source = leftResult.source().to(currentResult.source());\n        leftResult = results.success(currentResult.value()(leftResult.value(), source), currentResult.remaining(), source);\n      } else if (currentResult.isFailure()) {\n        return leftResult;\n      } else {\n        return currentResult;\n      }\n    }\n  }\n  function applyToTokens(tokens) {\n    return rules.firstOf(\"infix\", infixRules.map(function (infix) {\n      return infix.rule;\n    }))(tokens);\n  }\n  return {\n    apply: apply,\n    untilExclusive: untilExclusive,\n    untilInclusive: untilInclusive\n  };\n}\nexports.infix = function (name, ruleBuilder) {\n  function map(func) {\n    return exports.infix(name, function (parser) {\n      var rule = ruleBuilder(parser);\n      return function (tokens) {\n        var result = rule(tokens);\n        return result.map(function (right) {\n          return function (left, source) {\n            return func(left, right, source);\n          };\n        });\n      };\n    });\n  }\n  return {\n    name: name,\n    ruleBuilder: ruleBuilder,\n    map: map\n  };\n};\n\n// TODO: move into a sensible place and remove duplication\nvar lazyRule = function (ruleBuilder) {\n  var rule;\n  return function (input) {\n    if (!rule) {\n      rule = ruleBuilder();\n    }\n    return rule(input);\n  };\n};","map":{"version":3,"names":["rules","require","results","exports","parser","name","prefixRules","infixRuleBuilders","self","rule","leftAssociative","rightAssociative","infixRules","InfixRules","map","createInfixRule","prefixRule","firstOf","infixRuleBuilder","lazyRule","ruleBuilder","bind","createRule","untilExclusive","untilInclusive","apply","tokens","leftResult","isSuccess","slice","ruleNames","indexOf","currentResult","source","applyToTokens","remaining","to","success","value","isFailure","infix","func","result","right","left","input"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/lop/lib/bottom-up.js"],"sourcesContent":["var rules = require(\"./rules\");\nvar results = require(\"./parsing-results\");\n\nexports.parser = function(name, prefixRules, infixRuleBuilders) {\n    var self = {\n        rule: rule,\n        leftAssociative: leftAssociative,\n        rightAssociative: rightAssociative\n    };\n    \n    var infixRules = new InfixRules(infixRuleBuilders.map(createInfixRule));\n    var prefixRule = rules.firstOf(name, prefixRules);\n    \n    function createInfixRule(infixRuleBuilder) {\n        return {\n            name: infixRuleBuilder.name,\n            rule: lazyRule(infixRuleBuilder.ruleBuilder.bind(null, self))\n        };\n    }\n    \n    function rule() {\n        return createRule(infixRules);\n    }\n    \n    function leftAssociative(name) {\n        return createRule(infixRules.untilExclusive(name));\n    }\n    \n    function rightAssociative(name) {\n        return createRule(infixRules.untilInclusive(name));\n    }\n    \n    function createRule(infixRules) {\n        return apply.bind(null, infixRules);\n    }\n    \n    function apply(infixRules, tokens) {\n        var leftResult = prefixRule(tokens);\n        if (leftResult.isSuccess()) {\n            return infixRules.apply(leftResult);\n        } else {\n            return leftResult;\n        }\n    }\n    \n    return self;\n};\n\nfunction InfixRules(infixRules) {\n    function untilExclusive(name) {\n        return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name)));\n    }\n    \n    function untilInclusive(name) {\n        return new InfixRules(infixRules.slice(0, ruleNames().indexOf(name) + 1));\n    }\n    \n    function ruleNames() {\n        return infixRules.map(function(rule) {\n            return rule.name;\n        });\n    }\n    \n    function apply(leftResult) {\n        var currentResult;\n        var source;\n        while (true) {\n            currentResult = applyToTokens(leftResult.remaining());\n            if (currentResult.isSuccess()) {\n                source = leftResult.source().to(currentResult.source());\n                leftResult = results.success(\n                    currentResult.value()(leftResult.value(), source),\n                    currentResult.remaining(),\n                    source\n                )\n            } else if (currentResult.isFailure()) {\n                return leftResult;\n            } else {\n                return currentResult;\n            }\n        }\n    }\n    \n    function applyToTokens(tokens) {\n        return rules.firstOf(\"infix\", infixRules.map(function(infix) {\n            return infix.rule;\n        }))(tokens);\n    }\n    \n    return {\n        apply: apply,\n        untilExclusive: untilExclusive,\n        untilInclusive: untilInclusive\n    }\n}\n\nexports.infix = function(name, ruleBuilder) {\n    function map(func) {\n        return exports.infix(name, function(parser) {\n            var rule = ruleBuilder(parser);\n            return function(tokens) {\n                var result = rule(tokens);\n                return result.map(function(right) {\n                    return function(left, source) {\n                        return func(left, right, source);\n                    };\n                });\n            };\n        });\n    }\n    \n    return {\n        name: name,\n        ruleBuilder: ruleBuilder,\n        map: map\n    };\n}\n\n// TODO: move into a sensible place and remove duplication\nvar lazyRule = function(ruleBuilder) {\n    var rule;\n    return function(input) {\n        if (!rule) {\n            rule = ruleBuilder();\n        }\n        return rule(input);\n    };\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}