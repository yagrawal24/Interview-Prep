{"ast":null,"code":"var _ = require(\"underscore\");\nvar xmlbuilder = require(\"xmlbuilder\");\nexports.writeString = writeString;\nfunction writeString(root, namespaces) {\n  var uriToPrefix = _.invert(namespaces);\n  var nodeWriters = {\n    element: writeElement,\n    text: writeTextNode\n  };\n  function writeNode(builder, node) {\n    return nodeWriters[node.type](builder, node);\n  }\n  function writeElement(builder, element) {\n    var elementBuilder = builder.element(mapElementName(element.name), element.attributes);\n    element.children.forEach(function (child) {\n      writeNode(elementBuilder, child);\n    });\n  }\n  function mapElementName(name) {\n    var longFormMatch = /^\\{(.*)\\}(.*)$/.exec(name);\n    if (longFormMatch) {\n      var prefix = uriToPrefix[longFormMatch[1]];\n      return prefix + (prefix === \"\" ? \"\" : \":\") + longFormMatch[2];\n    } else {\n      return name;\n    }\n  }\n  function writeDocument(root) {\n    var builder = xmlbuilder.create(mapElementName(root.name), {\n      version: '1.0',\n      encoding: 'UTF-8',\n      standalone: true\n    });\n    _.forEach(namespaces, function (uri, prefix) {\n      var key = \"xmlns\" + (prefix === \"\" ? \"\" : \":\" + prefix);\n      builder.attribute(key, uri);\n    });\n    root.children.forEach(function (child) {\n      writeNode(builder, child);\n    });\n    return builder.end();\n  }\n  return writeDocument(root);\n}\nfunction writeTextNode(builder, node) {\n  builder.text(node.value);\n}","map":{"version":3,"names":["_","require","xmlbuilder","exports","writeString","root","namespaces","uriToPrefix","invert","nodeWriters","element","writeElement","text","writeTextNode","writeNode","builder","node","type","elementBuilder","mapElementName","name","attributes","children","forEach","child","longFormMatch","exec","prefix","writeDocument","create","version","encoding","standalone","uri","key","attribute","end","value"],"sources":["/Users/yashagrawal/Documents/Northwestern/Fall2023/CS338/InterviewPrep/node_modules/mammoth/lib/xml/writer.js"],"sourcesContent":["var _ = require(\"underscore\");\nvar xmlbuilder = require(\"xmlbuilder\");\n\n\nexports.writeString = writeString;\n\n\nfunction writeString(root, namespaces) {\n    var uriToPrefix = _.invert(namespaces);\n    \n    var nodeWriters = {\n        element: writeElement,\n        text: writeTextNode\n    };\n\n    function writeNode(builder, node) {\n        return nodeWriters[node.type](builder, node);\n    }\n\n    function writeElement(builder, element) {\n        var elementBuilder = builder.element(mapElementName(element.name), element.attributes);\n        element.children.forEach(function(child) {\n            writeNode(elementBuilder, child);\n        });\n    }\n    \n    function mapElementName(name) {\n        var longFormMatch = /^\\{(.*)\\}(.*)$/.exec(name);\n        if (longFormMatch) {\n            var prefix = uriToPrefix[longFormMatch[1]];\n            return prefix + (prefix === \"\" ? \"\" : \":\") + longFormMatch[2];\n        } else {\n            return name;\n        }\n    }\n    \n    function writeDocument(root) {\n        var builder = xmlbuilder\n            .create(mapElementName(root.name), {\n                version: '1.0',\n                encoding: 'UTF-8',\n                standalone: true\n            });\n        \n        _.forEach(namespaces, function(uri, prefix) {\n            var key = \"xmlns\" + (prefix === \"\" ? \"\" : \":\" + prefix);\n            builder.attribute(key, uri);\n        });\n        \n        root.children.forEach(function(child) {\n            writeNode(builder, child);\n        });\n        return builder.end();\n    }\n\n    return writeDocument(root);\n}\n\nfunction writeTextNode(builder, node) {\n    builder.text(node.value);\n}\n"],"mappings":"AAAA,IAAIA,CAAC,GAAGC,OAAO,CAAC,YAAY,CAAC;AAC7B,IAAIC,UAAU,GAAGD,OAAO,CAAC,YAAY,CAAC;AAGtCE,OAAO,CAACC,WAAW,GAAGA,WAAW;AAGjC,SAASA,WAAWA,CAACC,IAAI,EAAEC,UAAU,EAAE;EACnC,IAAIC,WAAW,GAAGP,CAAC,CAACQ,MAAM,CAACF,UAAU,CAAC;EAEtC,IAAIG,WAAW,GAAG;IACdC,OAAO,EAAEC,YAAY;IACrBC,IAAI,EAAEC;EACV,CAAC;EAED,SAASC,SAASA,CAACC,OAAO,EAAEC,IAAI,EAAE;IAC9B,OAAOP,WAAW,CAACO,IAAI,CAACC,IAAI,CAAC,CAACF,OAAO,EAAEC,IAAI,CAAC;EAChD;EAEA,SAASL,YAAYA,CAACI,OAAO,EAAEL,OAAO,EAAE;IACpC,IAAIQ,cAAc,GAAGH,OAAO,CAACL,OAAO,CAACS,cAAc,CAACT,OAAO,CAACU,IAAI,CAAC,EAAEV,OAAO,CAACW,UAAU,CAAC;IACtFX,OAAO,CAACY,QAAQ,CAACC,OAAO,CAAC,UAASC,KAAK,EAAE;MACrCV,SAAS,CAACI,cAAc,EAAEM,KAAK,CAAC;IACpC,CAAC,CAAC;EACN;EAEA,SAASL,cAAcA,CAACC,IAAI,EAAE;IAC1B,IAAIK,aAAa,GAAG,gBAAgB,CAACC,IAAI,CAACN,IAAI,CAAC;IAC/C,IAAIK,aAAa,EAAE;MACf,IAAIE,MAAM,GAAGpB,WAAW,CAACkB,aAAa,CAAC,CAAC,CAAC,CAAC;MAC1C,OAAOE,MAAM,IAAIA,MAAM,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,GAAGF,aAAa,CAAC,CAAC,CAAC;IACjE,CAAC,MAAM;MACH,OAAOL,IAAI;IACf;EACJ;EAEA,SAASQ,aAAaA,CAACvB,IAAI,EAAE;IACzB,IAAIU,OAAO,GAAGb,UAAU,CACnB2B,MAAM,CAACV,cAAc,CAACd,IAAI,CAACe,IAAI,CAAC,EAAE;MAC/BU,OAAO,EAAE,KAAK;MACdC,QAAQ,EAAE,OAAO;MACjBC,UAAU,EAAE;IAChB,CAAC,CAAC;IAENhC,CAAC,CAACuB,OAAO,CAACjB,UAAU,EAAE,UAAS2B,GAAG,EAAEN,MAAM,EAAE;MACxC,IAAIO,GAAG,GAAG,OAAO,IAAIP,MAAM,KAAK,EAAE,GAAG,EAAE,GAAG,GAAG,GAAGA,MAAM,CAAC;MACvDZ,OAAO,CAACoB,SAAS,CAACD,GAAG,EAAED,GAAG,CAAC;IAC/B,CAAC,CAAC;IAEF5B,IAAI,CAACiB,QAAQ,CAACC,OAAO,CAAC,UAASC,KAAK,EAAE;MAClCV,SAAS,CAACC,OAAO,EAAES,KAAK,CAAC;IAC7B,CAAC,CAAC;IACF,OAAOT,OAAO,CAACqB,GAAG,CAAC,CAAC;EACxB;EAEA,OAAOR,aAAa,CAACvB,IAAI,CAAC;AAC9B;AAEA,SAASQ,aAAaA,CAACE,OAAO,EAAEC,IAAI,EAAE;EAClCD,OAAO,CAACH,IAAI,CAACI,IAAI,CAACqB,KAAK,CAAC;AAC5B"},"metadata":{},"sourceType":"script","externalDependencies":[]}